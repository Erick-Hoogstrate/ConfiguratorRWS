group $name$: //$type$
  automaton Buttons:
    uncontrollable u_r, u_g, u_emerg;
    monitor u_r, u_g;
    location Red:
      initial;
      edge u_g     when $redgreenallowed$ goto RedGreen;
    location RedGreen:
      edge u_r                            goto Red;
      edge u_g     when $greenallowedentering$    goto Green;
      edge u_emerg when $emergencystop$   goto Red;
    location Green:
      edge u_r                            goto Red;
      edge u_emerg when $emergencystop$   goto Red;
  end
  automaton BlockButton:
    uncontrollable u_push;
    monitor u_push, Buttons.u_r;
    location On:
      initial;
      edge Buttons.u_r                goto Off;
    location Off:
      edge u_push when $blockallowed$ goto On;
  end

  alg bool Red      = Buttons.Red;
  alg bool RedGreen = Buttons.RedGreen;
  alg bool Green    = Buttons.Green;
  alg bool Block    = BlockButton.On;

  svgin  id "$name$.red"   event Buttons.u_r file $filename$;
  svgin  id "$name$.green" event Buttons.u_g file $filename$;
  svgin  id "$name$.block" event BlockButton.u_push file $filename$;
  svgout id "$name$.red"   attr "fill" value if Buttons.Red   or Buttons.RedGreen: "red"   else "grey" end file $filename$;
  svgout id "$name$.green" attr "fill" value if Buttons.Green or Buttons.RedGreen: "green" else "grey" end file $filename$;
  svgout id "$name$.block" attr "fill" value if BlockButton.On:                    "red"   else "grey" end file $filename$;
end
