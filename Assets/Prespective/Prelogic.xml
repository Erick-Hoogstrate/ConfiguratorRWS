<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Prelogic</name>
    </assembly>
    <members>
        <member name="T:u040.prespective.prelogic.adapters.mqtt.MQTTStreamAdapter">
            <summary>
            @CLASS : MQTTStreamAdapter 
            
            @ABOUT: Stream Adapter Settings to connect to an MQTT broker
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:   v1.01 - 27/01/2020 - Cleaned comments and debug statements
                        v1.00 - 20/06/2019 - Make a connection to an Active MQ server based on Cordis Template by Pieter
                                          Reads and writes to queues (hardtyped)
                                          Connection is hardtyped over activemq:tcp
                                          
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.mqtt.MQTTStreamAdapter.Connect(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            2) Connect to the ActiveMQ broker
            </summary>
            <param name="_result">Result of the connection function (a successful connection may still yield an insufficient stream;  side errors are passed as warnings)</param>
            <param name="_configurationData">optional configuration data; not used for ActiveMQ</param>
            <param name="_settings">optional settings; not used for ActiveMQ</param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.mqtt.MqttUtility">
            <summary>
            @CLASS : MQTTUtility 
            
            @ABOUT: Utility class for reading and writing MQTT values
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 29/10/2019 First implementation of the MQTT Utils
                                          
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.IPAddress">
            <summary>
            IP Address of MQTT server (default: localhost -> 127.0.0.1)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.Port">
            <summary>
            The port to use for the MQTT (default: 1883)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.useTLS">
            <summary>
            Boolean to use TLS secure connection
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.ClientID">
            <summary>
            ClientID that is send for MQTT
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.UserName">
            <summary>
            Username is used when field is not empty
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.PassWord">
            <summary>
            Password is used when username is not empty
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.QoS">
            <summary>
            Set the Quality of service of MQTT Protocol
            0: QOS_LEVEL_AT_MOST_ONCE
            1: QOS_LEVEL_AT_LEAST_ONCE
            2: QOS_LEVEL_EXACTLY_ONCE
            128: QOS_LEVEL_GRANTED_FAILURE 
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.mqtt.MQTTServerSettings.ProtocolVersion">
            <summary>
            Only V311 is tested
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.mqtt.MQTTStreamSignalSocket">
            <summary>
            Part of MQTT Prelogic Adapter - Stream Signal Socket
            
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.mqtt.MQTTStreamSignalSocket.OnValueChanged(System.Object,u040.prespective.prelogic.adapters.PlcValueChanged)">
            <summary>
            Callback when a value is changed
            </summary>
            <param name="_sender"></param>
            <param name="_valueChanged"></param>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.mqtt.MQTTStreamSignalSocket.LiveValueBuffer">
            <summary>
            Live value from buffer
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.mqtt.MQTTStreamSignalSocket.LiveValue">
            <summary>
            Live value
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.mqtt.MQTTStreamSignalSocket.writeValue(u040.prespective.preplug.logicadapter.signaladaptation.SignalBuffer)">
            <summary>
            void to actually write the value
            </summary>
            <param name="_value"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.mqtt.MQTTStreamSignalSocket.Dispose">
            <summary>
            what to do on disposal of stream signal socket
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamSignalSocket.onValueChanged(System.Object,u040.prespective.prelogic.adapters.PlcValueChanged)">
            <summary>
            Called by adapter when OUTPUT value changed.
            No INPUT support yet.
            </summary>
            <param name="_sender"></param>
            <param name="_args"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.adapters.tcads.TwincatADSType" -->
        <member name="T:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigInteractor">
            <summary>
            @CLASS : CordisConfigInteractor
            
            @ABOUT : Prelogic Configuration settings for Cordis Gateway
            
            @AUTHOR: Pieter (Unit040)
            
            @VERSION: V1.00 - 07/03/2019 - Export to ADS implemented for Prelogic Alpha
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigInteractor.ExportConfiguration(System.Object)">
            <summary>
            Actually export the Cordis Prelogic configuration
            </summary>
            <param name="_configuration">the simulator object</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigInteractor.ImportConfiguration(System.Object)">
            <summary>
            Actually import the cordis Prelogic configuration
            
            v1.00 NOTE: not yet implemented
            </summary>
            <param name="_configuration">the simulator object</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility" -->
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.FB_ID_CHAR_OPTIONS">
            <summary>
            Character options for the Function Block ID in a TwinCat TcPOU file
            (TC 4022.28: Currently not used since ID's corrupt the model import)
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.generate_FB_ID">
            <summary>
            Generates a FB ID for a TwinCat TcPOU file
            Example: {45910d14-f664-462b-9321-8e1f7f5693cb}
            (TC 4022.28: Currently not used since ID's corrupt the model import)
            </summary>
            <returns></returns>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.TcPOU_BASENODE">
            <summary>
            Structure of a TcPOU (Class) file Basenode
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.GVL_BASENODE">
            <summary>
            Structure of a TcGVL (Global Variable List) file basenode
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.linkedModelHeaderGenerator(u040.prespective.prelogic.configuration.SignalExportModelLink)">
            <summary>
            Appends a header to the stringified linked model
            </summary>
            <param name="_lModel">linked model to create a header for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.linkedModelHeaderGenerator(u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Appends a header to the stringified non-linked model
            </summary>
            <param name="_lModel">non-linked model to create a header for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.genModelFieldName(u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Generates the fieldname (i.e. used for instancing of this model) to use for a model
            </summary>
            <param name="_model">model to generate the fieldname for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.genModelClassName(u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Generates the classname (i.e. used for typing, and the file name) of the model
            </summary>
            <param name="_model">model to generate the classname for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.genLinkedModelClassName(u040.prespective.prelogic.configuration.SignalExportModelLink)">
            <summary>
            Generates the classname (i.e. used for typing, and the file name) of the linked model
            </summary>
            <param name="_model">linked model to generate the classname for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.genModelCollectionClassName(u040.prespective.prelogic.configuration.SignalExportModel,UnityEngine.Vector2Int)">
            <summary>
            Generates the Collection signifier for a particular model
            </summary>
            <param name="_model">the model(type) to create a collection for</param>
            <param name="_range">minimal and maximal index to register in the collection (i.e. twincat allows arrays to start at an index > 0)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.genModelFileStub(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},u040.prespective.prelogic.configuration.PreLogicConfigurationSettings)">
            <summary>
            Generates the stub (minimal structure) for a model
            </summary>
            <param name="_modelName">name of this model</param>
            <param name="_modelSettings">Settings affecting the stub generation of this model (export target dependant)</param>
            <param name="_configSettings">Configuration settings active on the simulator (user settings)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.genSignalDirectionInjectionStub(u040.prespective.prelogic.PLCSignalDirection,System.String,u040.prespective.prelogic.configuration.PreLogicConfigurationSettings)">
            <summary>
            Inserts the signal injection markers in the stub string (the markers that indicate where auto-generated file management is active, and where the user is in control)
            </summary>
            <param name="_signalDirection">the direction of the signal</param>
            <param name="_exportFileType">the filetype we are looking to export</param>
            <param name="_configSettings">the configuration settings that apply</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.exportSignalInstance(System.String,u040.prespective.prelogic.signal.SignalInstance,System.Text.StringBuilder,System.Boolean)">
            <summary>
            Export a single signal instance
            </summary>
            <param name="_fieldName"></param>
            <param name="_si"></param>
            <param name="_sb"></param>
            <param name="_verbose"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.cleanLinkedModelName(u040.prespective.prelogic.configuration.SignalExportModelLink,System.Char[])">
            <summary>
            Clean the class model name
            - Attempt to determine if this class represents a collection by looking for an array bracket
            - Alternatively, try to name the class to the greatest shared name part for all tied models; and trim the end of the name with commonly used splitter symbols
            </summary>
            <param name="_linkedModel"></param>
            <param name="_illegalEndCharacters"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.assignToSubSystem(u040.prespective.prelogic.signal.SignalInstance,System.Collections.Generic.List{u040.prespective.prelogic.adapters.tcads.SignalSubSystem}@,System.Char)">
            <summary>
            Assign a signal to a specific subsystem
            </summary>
            <param name="_signal">the signal to assign</param>
            <param name="_currentSystems">the currently available subsystems</param>
            <param name="_splitter">the splitter character to use to split subsystems</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSConfigurationExporterUtility.getSignalSubSystem(System.Collections.Generic.List{System.String},System.Collections.Generic.List{u040.prespective.prelogic.adapters.tcads.SignalSubSystem},u040.prespective.prelogic.adapters.tcads.SignalSubSystem,u040.prespective.prelogic.adapters.tcads.SignalSubSystem)">
            <summary>
            Get the subsystem containing signal by path
            </summary>
            <param name="_path">the path leading to this PLC signal</param>
            <param name="_systemOptions">the alternative options for subsystems that may contain the PLC signal</param>
            <param name="_currentSystem">when recursing, the most recent system visited</param>
            <returns>the subsystem that should contain this particular signal</returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.tcads.SignalSubSystem">
            <summary>
            @CLASS : SignalSubSystem
            
            @ABOUT : pattern found in a configuration indicative of a model for a set of signals
                     A Signal Subsystem may be generalized as a model when exporting; the form
                     is dependant on the target application
                     
            @AUTHOR: Pieter (Unit040)
            
            @VERSION : v1.00 - 07/03/2019 - Part of the Configuration Exporter for Prelogic Alpha module
                     Seems to support most structures creatable using regular expressions
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.SignalSubSystem.getMaxNestingDepth(System.Int32)">
            <summary>
            Returns the maximum nesting level found in this model
            NOTE: the depth = getSystemsAtnestingLevel + 1
            </summary>
            <param name="_depth">the maximum depth found</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.SignalSubSystem.getSystemsAtNestingLevel(System.Int32)">
            <summary>
            Returns all model (systems) found at a particular nesting level
            </summary>
            <param name="_depth">the nesting level to look in</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.SignalSubSystem.ToString">
            <summary>
            Outputs this subsystem as string (Not used for exporting, but as a Debugging function)
            </summary>
            <returns></returns>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSServerSettings.AMSNetID">
            <summary>
            IP Address to target for the ADS server
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSServerSettings.Port">
            <summary>
            Port to target for the ADS server
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter">
            <summary>
            <description>
            Twincat ADS stream adapter uses block read and write
            </description>
            <version 
                ver="0.0.2" 
                author="Koen" 
                date="190927">
                
            </version>
                /// <version 
                ver="1.0.0" 
                author="Koen" 
                date="021027">
                <summary>
                   SHORT + LONG + USHORT + SBYTE + ULONG now works
                </summary>
            </version>
            
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.ADSClient">
            <summary>
            The ADSClient
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.tcADSServerSettings">
            <summary>
            Settings specific for the twincat ADS Stream connection
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.adsInputVariables">
            <summary>
            A list of all ads input variables
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.adsOutputVariables">
            <summary>
            A list of all ads output values
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.adsVariableReady">
            <summary>
            Double checks if the ads variable list has been initialized.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.setVariableLists">
            <summary>
            Initialize the INPUT and OUTPUT variable List
            Right now we block a lot of base Values
            TODO implement non implemented base values.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.BlockReadWriteUpdate">
            <summary>
            Use block/read write to update the INPUT and OUTPUT values.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tcads.TwincatADSStreamAdapter.SetADSValue(u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,System.Object)">
            <summary>
            Sets an ADS INPUT value
            </summary>
            <param name="_contract"></param>
            <param name="_value"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings">
            <summary>
            Abstract class for handling Generic stream adapter settings
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.PolicyLocation">
            <summary>
            public accessor to the Policy Filepath 
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.InSettings">
            <summary>
            public accessor for the AdapterSettings (formerly known as inSettings)
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.u040#prespective#prelogic#adapters#IPreLogicStreamAdapterSettings#AdapterSettingsPrefix">
            <summary>
            Returning the string to the interface
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.AdapterSettingsPrefix">
            <summary>
            Prefix used to make sure the adapter specific fields are unique (full caps with underscore, ~ 3 chars)
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.ExportSettings">
            <summary>
            Export Adapter Settings to a dictionary (string, object)
            </summary>
            <returns>Dictionary with values per settings</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.ImportSettings(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Imports serialized Adapter Settings and map them to the active Adapter Settings
            </summary>
            <param name="_settingsData">read settings data from serializer</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.getAllFieldsContainingAttribute(System.Type)">
            <summary>
            Return all fields that have the selected attribute
            </summary>
            <param name="_customAttribute"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.ExportServerNode(u040.prespective.prelogic.APreLogicSimulator)">
            <summary>
            Export server settings as XML nodes
            </summary>
            <param name="_sim">Current Simulator calling the export</param>
            <returns>List of XML nodes used in Policy.xml</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.getTabs(System.Int32)">
            <summary>
            Helper to get the right amount of tabs for exporting the XML Nodes
            </summary>
            <param name="_level"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.toXmlAttribute(System.String,System.String@,System.String@)">
            <summary>
            Helper to make sure the prefix and suffix for the XML are equal
            </summary>
            <param name="_attributeName">Name of the XML Attribute</param>
            <param name="_pre">XML Prefix</param>
            <param name="_post">XML Suffix</param>
            <returns>false if _attributeName is null or empty</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.ExportSignalType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Export Supported Signal Type for use with type contract
            </summary>
            <param name="_signalType"></param>
            <returns>Signal Type as String</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapterSettings.ImportSignalType(System.String)">
            <summary>
            Import Supported Signal Type from XML to use in prelogic
            </summary>
            <param name="_signalType"></param>
            <returns>Supported Signal Type</returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.allenbradley.ABUtility">
            <summary>
            @CLASS : ABUtility 
            
            @ABOUT: Utility class for reading and writing to Allen Bradley PLC
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 23/1/2020 - Tested with CompactLogix L33ER -> Only tested, bool, int, byte, float
                                          
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.allenbradley.ABUtility.abSignalOperations">
            <summary>
            List of Allen Bradley Signal operations per type
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABUtility.ReadABSignalValue(u040.prespective.prelogic.SupportedSignalType,Corsinvest.AllenBradley.PLC.Api.ITag)">
            <summary>
            Read AMQsignalValue
            </summary>
            <param name="_signalType">Preplug signal type</param>
            <param name="_msg">MapMessage Object</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABUtility.WriteABSignalValue(u040.prespective.prelogic.SupportedSignalType,Corsinvest.AllenBradley.PLC.Api.ITag,System.Object)">
            <summary>
            Write AMQ Signal value
            </summary>
            <param name="_signalType">Preplug signal type</param>
            <param name="_sender">AMQP SenderLink</param>
            <param name="_value">Value to write</param>
            <returns></returns>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.allenbradley.ABUtility.abTypeConversion">
            <summary>
            Type conversion for XML policy
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABUtility.getAbType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Converts the prelogic type to AB PLC type
            </summary>
            <param name="_prelogicType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABUtility.getPrelogicType(u040.prespective.prelogic.adapters.allenbradley.ABPType)">
            <summary>
            Converts the ActiveMQ signal type to prelogic type
            </summary>
            <param name="abpType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABUtility.importPrelogicSignalType(System.String)">
            <summary>
            Returns prelogic signaltype based on the string of amqtype
            </summary>
            <param name="_abType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABUtility.exportABSignalType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Returns the strong of the AMQP type
            </summary>
            <param name="_signalType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABUtility.CreateTag(u040.prespective.preplug.logicadapter.StreamSignalType,Corsinvest.AllenBradley.PLC.Api.TagGroup,System.String)">
            <summary>
            Returns the created tag with correct type
            </summary>
            <param name="signalType"></param>
            <param name="group"></param>
            <param name="tagName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.allenbradley.ABStreamAdapter">
            <summary>
            @CLASS : ABStreamAdapter 
            
            @ABOUT: Stream Adapter to connect to a Allen Bradley PLC
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION: v1.00 - 23/1/2020 - Tested with CompactLogix L33ER
                                          
                                          
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABStreamAdapter.Connect(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            2) Connect to the AMQP broker
            </summary>
            <param name="_result">Result of the connection function (a successful connection may still yield an insufficient stream;  side errors are passed as warnings)</param>
            <param name="_configurationData">optional configuration data; not used for AMQP</param>
            <param name="_settings">optional settings; not used for AMQP</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABStreamAdapter.RegisterStreamSignals(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            Register Stream all available Signals
            </summary>
            <param name="_result"></param>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABStreamAdapter.registerABOutput``1(Corsinvest.AllenBradley.PLC.Api.Controller,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Registering a new Output Socket
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABStreamAdapter.registerABInput``1(Corsinvest.AllenBradley.PLC.Api.Controller,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Registration of an input signal
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABStreamAdapter.registerABVariable``1(Corsinvest.AllenBradley.PLC.Api.Controller,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Setup of a variable signal direction. Combination of input and output
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.allenbradley.ABServerSettings">
            <summary>
            @CLASS : Allen Bradley Server Settings 
            
            @ABOUT: Server Settings for Allen Bradley
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 23/1/2020 - Tested with CompactLogix L33ER 
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.allenbradley.ABServerSettings.IPAddress">
            <summary>
            IP Address to target for the ActiveMQ server (127.0.0.1)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.allenbradley.ABServerSettings.PLCPath">
            <summary>
            Required for LGX, Optional for PLC/SLC/MLGX IOI path to access the PLC from the gateway.
            <para>Communication Port Type: 1- Backplane, 2- Control Net/Ethernet, DH+ Channel A, DH+ Channel B, 3- Serial</para>
            <para>Slot number where cpu is installed: 0,1.. </para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.allenbradley.ABServerSettings.CpuType">
            <summary>
            AB CPU models
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.allenbradley.ABConfigInteractor">
            <summary>
            @CLASS : Allen Bradley Stream Adapter 
            
            @ABOUT: AB implementation of Stream Signal Socket
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 23/1/2020 - Tested with CompactLogix L33ER
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABConfigInteractor.ExportConfiguration(System.Object)">
            <summary>
            Export the configuration settings
            </summary>
            <param name="_configuration"></param>
            <exception cref="!:NotImplementedException"></exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABConfigInteractor.ImportConfiguration(System.Object)">
            <summary>
            Import configuration settings
            </summary>
            <param name="_configuration"></param>
            <exception cref="!:NotImplementedException"></exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABConfigInteractor.CustomUIBlock(u040.prespective.prelogic.APreLogicSimulator)">
            <summary>
            Extra UI block if needed
            </summary>
            <param name="_simulator"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.allenbradley.ABStreamSignalSocket`1">
            <summary>
            @CLASS : Allen Bradley Stream Adapter 
            
            @ABOUT: Allen Bradley implementation of Stream Signal Socket
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 23/1/2020 - Tested with CompactLogix L33ER
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.allenbradley.ABStreamSignalSocket`1.LiveValueBuffer">
            <summary>
            Live (current) Value SignalBuffer
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.allenbradley.ABStreamSignalSocket`1.LiveValue">
            <summary>
            Current value
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABStreamSignalSocket`1.writeValue(u040.prespective.preplug.logicadapter.signaladaptation.SignalBuffer)">
            <summary>
            Write values to the buffer and to the adapter
            </summary>
            <param name="_value">SignalBuffer object that holds newvalue and date time</param>
            <exception cref="T:System.Exception">Unable to write</exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.allenbradley.ABStreamSignalSocket`1.Dispose">
            <summary>
            Dispose the object
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.websocket.WsUtility">
            <summary>
            @CLASS : WsUtility 
            
            @ABOUT: Utility class for reading and writing Ws values
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 29/10/2019 First implementation of the Ws Utils
                                          
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.websocket.WsServerSettings.IPAddress">
            <summary>
            IP Address of Ws server (default: localhost -> 127.0.0.1)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.websocket.WsServerSettings.Port">
            <summary>
            The port to use for the Ws (default: 1883)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.websocket.WsServerSettings.useTLS">
            <summary>
            Boolean to use TLS secure connection
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.websocket.WsServerSettings.UserName">
            <summary>
            Username is used when field is not empty
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.websocket.WsServerSettings.PassWord">
            <summary>
            Password is used when username is not empty
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.websocket.WsStreamAdapter">
            <summary>
            <description>
            Stream Adapter Settings to connect to an Websocket
            </description>
            <version ver="1.0.0" author="BBS" date="210201">
                Initial version with dispose updates
            </version>
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.websocket.WsStreamAdapter.Connect(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            2) Connect to the websocket
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket">
            <summary>
            Abstract base class for a SteamSignal Socket used with Prelogic
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.isolation.IsolationServerSettings">
            <summary>
            Isolation Stream Adapter Settings
            <para>Copyright (c) Prespective, Unit040 BV. All Rights Reserved. See License.txt in the project root for license information.</para>
            </summary>
            <version ver="1.0.0" author="BBS" date="210208">
                Initial Version
            </version>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.IsolationServerSettings.CSVfile">
            <summary>
            Path to the CSV file
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.IsolationServerSettings.FilePathType">
            <summary>
            Whether the path is absolute or relative to streaming assets
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.IsolationServerSettings.SeparatorCharacter">
            <summary>
            Character used for separating values (',' default)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.IsolationServerSettings.IgnoreHeader">
            <summary>
            Whether the csv file contains a header (ignore first line)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.IsolationServerSettings.ServerConnectedDelay">
            <summary>
            Delay before the IO stream starts
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.IsolationServerSettings.TimeMultiplier">
            <summary>
            For faster than realtime playback (1 = realtime)
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.isolation.IsolationStreamSignalSocket">
            <summary>
            Isolation Stream Signal Socket
            <para>Copyright (c) Prespective, Unit040 BV. All Rights Reserved. See License.txt in the project root for license information.</para>
            </summary>
            <version ver="1.0.0" author="BBS" date="210208">
                Initial Version
            </version>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.isolation.CsvHelper">
            <summary>
            CSV Helper class to read CSV files (for isolation adapter)
            <para>Copyright (c) Prespective, Unit040 BV. All Rights Reserved. See License.txt in the project root for license information.</para>
            </summary>
            <version ver="1.0.0" author="BBS" date="210208">
                Update reader to ignore empty lines and trim leading and trailing spaces
                Added split support for other characters
                Update Split Line to only take the first 3 elements into account DATE/CHANNEL/VALUE
            </version>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.CsvHelper.DEFAULT_BUFFER_SIZE">
            <summary>
            This is the same default buffer size as
            <see cref="T:System.IO.StreamReader"/> and <see cref="T:System.IO.FileStream"/>.
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.isolation.CsvHelper.DEFAULT_OPTIONS">
            <summary>
            Indicates that
            1. The file is to be used for asynchronous reading.
            2. The file is to be accessed sequentially from beginning to end.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.isolation.CsvHelper.ReadCsv(System.String,System.Char,System.Boolean)">
            <summary>
            Read a csv file and return this as a string array
            </summary>
            <param name="_filepath">Absolute path to the CSV file</param>
            <param name="_splitChar">Character to split the file by ',' by default</param>
            <param name="_ignoreHeader">Set to true when CSV contains a header for the table</param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.isolation.IsolationStreamAdapter">
            <summary>
            Isolation Stream Adapter
            <para>Copyright (c) Prespective, Unit040 BV. All Rights Reserved. See License.txt in the project root for license information.</para>
            </summary>
            <version ver="1.0.0" author="BBS" date="210208">
                Initial Version
            </version>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.isolation.IsolationPreLogicAdapterFactory">
            <summary>
            Isolation PreLogic Adapter Factory implementation (reflection)
            <para>Copyright (c) Prespective, Unit040 BV. All Rights Reserved. See License.txt in the project root for license information.</para>
            </summary>
            <version ver="1.0.0" author="BBS" date="210208">
                Initial Version
            </version>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.isolation.IsolationConfigInteractor">
            <summary>
            Isolation Adapter Config Interactor
            <para>Copyright (c) Prespective, Unit040 BV. All Rights Reserved. See License.txt in the project root for license information.</para>
            </summary>
            <version ver="1.0.0" author="BBS" date="210208">
                Add empty checks
            </version>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.PrelogicStreamClient">
            <summary>
            Prelogic streamclient that manages the connection to the stream
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.VERBOSE">
            <summary>
            bool getting all information from the prelogic simulator (debug purposes)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.simulator">
            <summary>
            Simulator where this client is tied to
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.streamClientStateBuffer">
            <summary>
            The current state of this prelogic stream client
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.blockingErrors">
            <summary>
            List with blocking errors that have lead to this client going into an error state
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient._simulationFrame">
            <summary>
            Number of frames passed since the start of the simulation
            (May be used by discrete updating components)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient._simulationStart">
            <summary>
            Actual timestamp of the start of this application run (since the application was started)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient._simulationDuration">
            <summary>
            Actual set duration of this application
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient._adapterTarget">
            <summary>
            Target Adapter for the PreLogic Simulator
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient._isolationMode">
            <summary>
            Whether to run the simulation in isolation mode
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.performingLifeCycleOperation">
            <summary>
            Busy with lifecycleoperations
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.preLogicLifecycleManagerBuffer">
            <summary>
            backing field for PreLogicContentLifecycleManager
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.aPreLogicStreamAdapter">
            <summary>
            Prelogic Stream Adapter
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.preLogicStreamPolicyInteractorBuffer">
            <summary>
            backing field for PreLogicStreamPolicyInteractor
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.loggingSettings">
            <summary>
            PreLogicLoggingSettings
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.preLogicConfigInteractorBuffer">
            <summary>
            PreLogicConfigurationInteractor
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.configurationSettings">
            <summary>
            PreLogicConfigurationSettings
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.preLogicStreamAdapterSettingsBuffer">
            <summary>
            Backing field of PreLogicStreamAdapterSettings
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.BLOCK_READ_WRITE_DELAY">
            <summary>
            ms delay for the blockreadwrite action
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.keepSendThreadAlive">
            <summary>
            keeping the send thread alive
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.keepBlockReadThreadAlive">
            <summary>
            keeping the block read/write thread alive
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.threadsInitialized">
            <summary>
            Initialization bool
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.StreamClientState">
            <summary>
            property used to change the client state; actually changes in the state invoke the appropriate event listeners
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.StreamAdapterSettings">
            <summary>
            Retrieves the stream adapter settings
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.StreamAdapter">
            <summary>
            Return APreLogicStreamAdapter as IStreamAdapter
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.PrelogicStreamAdapter">
            <summary>
            returns Prelogic Stream Adapter
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.PolicyInteractor">
            <summary>
            PreLogicStreamPolicyInteractor as IStreamPolicyInteractor
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.PrelogicpolicyInteractorBuffer">
            <summary>
            Prelogic Stream policy interactor
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.LifeCycleManager">
            <summary>
            retrieve PreLogicContentLifecycleManager as AContentLifeCycleManager
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.PrelogicLifeCycleManagerBuffer">
            <summary>
            Content lifecycle manager
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.ConfigurationInteractor">
            <summary>
            Prelogic Configuration interactor
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.SimulationStart">
            <summary>
            DatimeTime when simulation started
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.SimulationFrame">
            <summary>
            The current simulation frame
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.SimulationDuration">
            <summary>
            Duration of the current simulation
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.streamAdapterTarget">
            <summary>
            Get the current stream adapter target
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PrelogicStreamClient.isolationMode">
            <summary>
            Isolation mode (not implemented)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.onClientEventAdvanced">
            <summary>
            Advanced client event listener; this event triggers on all changes of the client state
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.onClientError">
            <summary>
            Error client listener, is invoked on encountering a client error (Stream Error, Signal Adapter error, Policy Error, Lifecycle Error, Configuration Error, Remote signals error, Application Error)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.onClientIssues">
            <summary>
            Issue client listener, is invoked on encountering issues (during a lifecycle operation)
            If overriden this function expects a boolean return value; a FALSE return value deems the issue as critical and breaks of the ongoing lifecycle operation
            (Allows you to inject custom application/lifecycle logic)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnClientReset">
            <summary>
            Rest Client Listener, is invoked on resetting the client
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnClientStopped">
            <summary>
            Stopping Client Listener, is invoked on stopping the client
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnClientConfigurationReady">
            <summary>
            Configuration Ready client Listener, is invoked when the configuration is ready for prelogic simulation
            This listener is currently not part of the simulation lifecycle (since we don't yet support importing of custom simulation configurations)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnPolicyReady">
            <summary>
            Policy Ready Listener, is invoked after loading in the simulation regulating policy (from XML or from a live stream)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnClientStreamConnected">
            <summary>
            Client stream connected listener, is invoked after a connection is made with the client stream (with the remote)
            Differs per gateway
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnLifeCycleReady">
            <summary>
            Lifecycle ready listener, is invoked afterthe lifecycle manager is setup; differs per gateway type
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnSignalAdaptersCreated">
            <summary>
            Adapters created listener, is invoked after signal adapters are created for all active signal contracts found in the signal policy
            Note that it is expected that all components register their signals in response to this event
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnRemoteSignalsReady">
            <summary>
            Remote signal(sockets)(s) ready listener, invoked after all remote sockets are created and connected to the live remote (stream)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnApplicationReady" -->
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnApplicationUpdate">
            <summary>
            Client Updated Callback
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnApplicationStarted">
            <summary>
            Application Started Callback
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnApplicationPaused">
            <summary>
            Application Paused Callback
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnApplicationStopped">
            <summary>
            Application Stopped Callback
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PrelogicStreamClient.OnStreamAdapterStateChangedEvent">
            <summary>
            Stream Adapter State Callback
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PrelogicStreamClient.#ctor(u040.prespective.preplug.logicadapter.ContentLifeCycleSettings,u040.prespective.prelogic.configuration.PreLogicConfigurationSettings,u040.prespective.prelogic.PreLogicLoggingSettings,u040.prespective.prelogic.APreLogicSimulator)">
            <summary>
            On initialization we'll default to cordis settings
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PrelogicStreamClient.regenAdapter(u040.prespective.prelogic.adapters.PreLogicAdapterTarget)">
            <summary>
            Regenerates the instances required in memory required for correct operation of hte stream adapter
            </summary>
            <param name="_adapter"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PrelogicStreamClient.ReadyClientForApplication(u040.prespective.prelogic.adapters.OnPreLogicCallback,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Connected the simulation
            </summary>
            <param name="_result"></param>
            <param name="_warnings"></param>
            <param name="_isolationMode"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PrelogicStreamClient.ImportLocalPolicyDB(u040.prespective.prelogic.adapters.OnPreLogicCallback,System.Collections.Generic.List{System.String},System.Boolean,System.Action)">
            <summary>
            1) Import the local policy database and prepare the signal contracts for use
            </summary>
            <param name="_result"></param>
            <param name="_warnings"></param>
            <param name="_isolationMode"></param>
            <param name="_onContinue"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PrelogicStreamClient.ConnectSimStream(u040.prespective.prelogic.adapters.OnPreLogicCallback,System.Collections.Generic.List{System.String},System.Boolean,System.Action)">
            <summary>
            2) Connect to the simulation stream, and attempt to sync the states
            </summary>
            <param name="_result"></param>
            <param name="_warnings"></param>
            <param name="_isolationMode"></param>
            <param name="_onContinue"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PrelogicStreamClient.InitContentLifecycle(u040.prespective.prelogic.adapters.OnPreLogicCallback,System.Collections.Generic.List{System.String},System.Boolean,System.Action)">
            <summary>
            3) Initialize lifecycle control and attempt to sync the states on both sides
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PrelogicStreamClient.CreateSignalAdapters(u040.prespective.prelogic.adapters.OnPreLogicCallback,System.Collections.Generic.List{System.String},System.Boolean,System.Action)">
            <summary>
            4) Create the signal adapters
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.Ros2XMLTypeGenerator">
            <summary>
            <description>
            ROS2 generator for dynamic type XML for EProsimas Fast DDS
            </description>
            <version version="1.0.0" author="BBS" date="201214">
            Initial Version
            </version>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.Ros2XMLTypeGenerator.MSG_TO_DDS">
            <summary>
            ROS2 message typemap to FastDDS Dynamic typing
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.LibraryLoader.LoadLibraryLocal(System.String)">
            <summary>
            Smart library loader that checks unity platform
            </summary>
            <param name="_fileName"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">Only windows and linux are supported</exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.LibraryLoader.GetProcAddressLocal(System.IntPtr,System.String)">
            <summary>
            Smart Procc loader that checks unity platform
            </summary>
            <param name="_handle"></param>
            <param name ="_name"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">Only windows and linux are supported</exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.LibraryLoader.FreeLibraryLocal(System.IntPtr)">
            <summary>
            Smart Free library  that checks unity platform
            </summary>
            <param name="_handle"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException">Only windows and linux are supported</exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.OnMessageReceivedEventArgs.#ctor(System.String)">
            <summary>
            sets the value and deserializes the object
            </summary>
            <param name="_value"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.dds.DDSHolder">
            <description>
             Holder class for Intptr to c++ for linux + windows
            </description>
            <version 
                ver="1.0.0" 
                author="KGS" 
                date="03022021">
            </version>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.dds.DDSHolder.CallBack">
            <summary>
            
            </summary>
            <param name="s">string</param>
            <param name="t">type</param>
            <param name="isJson">is json</param>
            <param name="length">length</param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.dds.DDSInstance">
            <summary>
            <description>
             An instance of DDS
            </description>
            <version 
                ver="1.0.0" 
                author="KGS" 
                date="020221">
            </version>
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.DDSInstance.#ctor(u040.prespective.prelogic.adapters.ros2.dds.DDSInstance.OnNewMessageReceived,System.String,System.Type,u040.prespective.prelogic.adapters.ros2.dds.DDSInstance.Kind,System.Int32,System.String[])">
            <summary>
            Create a dds instance for rosType
            </summary>
            <param name="_onNewMessageReceived">Event that triggers onNewDataMessage</param>
            <param name="_topicName">name of topic</param>
            <param name="_xmlPaths">the paths for the generated xml files</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.DDSInstance.initLibrary(System.Boolean)">
            <summary>
            load librarys and proc address
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.DDSInstance.handleInitCall(System.String,System.String,System.Int32,System.String[])">
            <summary>
            Allocates and calls init.
            </summary>
            <param name="_topicName"></param>
            <param name="_topicDataType"></param>
            <param name="_xmlPaths"></param>
            <exception cref="T:System.IO.FileNotFoundException">Checks if xml exists</exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.DDSInstance.getCorrectPath">
            <summary>
            get correct library file and check if it exists
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.dds.DDSInstance.calling(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Callback from c++
            </summary>
            <param name="_pointer"></param>
            <param name="_type"></param>
            <param name="_isJson"></param>
            <param name="length"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.ROS2StreamSignalSocket">
            <summary>
            <description>
             Stream signal socket for ros2
            </description>
            <version 
                ver="1.0.0" 
                author="BBS" 
                date="2910202">
            </version>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.Ros2Generator">
            <summary>
            <description>
            ROS2 generator main class for generating XML/Class files
            </description>
            <version version="1.0.1" author="BBS" date="210129">
            Added comments and updates the class generator
            </version>
            <version version="1.0.0" author="BBS" date="201214">
            Initial Version
            </version>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.Ros2Generator.DIRECTORIES_TO_EXCLUDE">
            <summary>
            Directories to exclude
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.IsExcluded(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Checks if the dir is excluded from indexing 
            </summary>
            <param name="_excludedDirList"></param>
            <param name="_target"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.ReadFile(System.String)">
            <summary>
            Read a MSG file as txt
            </summary>
            <param name="_pathToMsgFile"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.FactorMsgImportFile(System.String)">
            <summary>
            Factor msg files to a string array
            </summary>
            <param name="_fullText"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.GenerateAllClasses(System.String,System.String)">
            <summary>
            Main void to start the generation of classes
            </summary>
            <param name="_sourcePath"></param>
            <param name="_destinationPath"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.GenerateAllXmls(System.String,System.String,System.String)">
            <summary>
            Function to start generation of XML files
            </summary>
            <param name="_sourcePath"></param>
            <param name="_destinationPath"></param>
            <param name="_fileName"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.GetAllMsgFilesFromPath(System.String)">
            <summary>
            Retrieve all files from the ROS2 shared folder
            </summary>
            /// <param name="_path">path to the message files</param>
            <returns>A list of all msg paths</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.GetNameSpaceArray(System.String,System.String)">
            <summary>
            Get Namespace array
            </summary>
            <param name="_msgFile"></param>
            <param name="_folderPath"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.IsDefined(System.String)">
            <summary>
            check if the line contains a definition symbol '='
            </summary>
            <param name="_line"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.IsComment(System.String)">
            <summary>
            Check if the line is comment
            </summary>
            <param name="_line"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.RemoveComment(System.String)">
            <summary>
            Strip the comments
            </summary>
            <param name="_line"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.IsBaseType(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Check if the rostype matches pre defined basetype
            </summary>
            <param name="_rostype"></param>
            <param name="_dic"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.IsInternalType(System.String)">
            <summary>
            Check if rostype is an internal ROS2 type
            </summary>
            <param name="_rostype"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2Generator.IsArrayType(System.String)">
            <summary>
            Check if the type is an array
            </summary>
            <param name="_rostype"></param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator">
            <summary>
            <description>
            ROS2 generator for C# classes to use with ROS2 prespective adapter
            </description>
            <version version="1.0.1" author="BBS" date="210129">
            Update for not including commented lines in constructor
            </version>
            <version version="1.0.0" author="BBS" date="201214">
            Initial Version
            </version>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.MSG_TO_C_SHARP">
            <summary>
            ROS2 message typemap to CSharp
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.GenerateClassFromMsg(System.String,System.String,System.String)">
            <summary>
            Generate csharp class from MSG file
            </summary>
            <param name="_msgFile"></param>
            <param name="_sourcePath"></param>
            <param name="_destinationPath"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.GetValuePart(System.String[],System.Boolean)">
            <summary>
            Parse the value part of the content
            </summary>
            <param name="_lineContent"></param>
            <param name="_isDefined"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.FactorMembers(System.Collections.Generic.List{System.String[]})">
            <summary>
            Factor members tot remove non needed parts when creating constructors
            </summary>
            <param name="_members"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.GenerateConstructor(System.String,System.Collections.Generic.List{System.String[]},System.Int32)">
            <summary>
            Generate constructor
            </summary>
            <param name="_classname"></param>
            <param name="_members"></param>
            <param name="_tabDepth"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.GenerateEmptyConstructor(System.String,System.Collections.Generic.List{System.String[]},System.Int32)">
            <summary>
            Generate empty constructor
            </summary>
            <param name="_classname"></param>
            <param name="_members"></param>
            <param name="_tabDepth"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.WriteClass(System.String[],System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Write class file to given folder
            </summary>
            <param name="_nameSpaceArray"></param>
            <param name="_classStringBuilder"></param>
            <param name="_classname"></param>
            <param name="_destinationPath"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2ClassGenerator.GenerateNameSpaces(System.String,System.String,System.String@,System.String@,System.String[]@,System.String@,System.Int32@)">
            <summary>
            Generate Namespaces
            </summary>
            <param name="_msgFile"></param>
            <param name="_path"></param>
            <param name="_classPrefix"></param>
            <param name="_classSuffix"></param>
            <param name="_nameSpaceArray"></param>
            <param name="_className"></param>
            <param name="_tabDepth"></param>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.ROS2ServerSettings.DomainId">
            <summary>
            DDS domain id
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.ROS2ServerSettings.PathToRosShareFolder">
            <summary>
            Path to Main Ros Share Folder
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.ROS2ServerSettings.PathToRosWorkspaceShareFolder">
            <summary>
            Path to the ROS Workspace share folder
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.ROS2ServerSettings.PathToDefaultRosTypeXML">
            <summary>
            Path to default Ros Type XML
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros2.ROS2ServerSettings.PathToCustomTypeXML">
            <summary>
            Path to Custom workspace Type XML
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.ROS2Utility">
            <summary>
            <description>
             Utility class for reading and writing Ros2 values
            </description>
            <version 
                ver="1.0.0" 
                author="BBS" 
                date="2910202">
            </version>
            <version
                ver="1.1.0"
                author="KGS"
                date="03022021">
                <summary>implemented publisher and removed unused code</summary>
            </version>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.ROS2StreamAdapter">
            <description>
             Stream Adapter Settings to connect to an ROS2 broker
            </description>
            <version 
                ver="1.0.0" 
                author="BBS" 
                date="2910202">
            </version>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.ROS2StreamAdapter.Connect(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            2) Connect to the ActiveMQ broker
            </summary>
            <param name="_result">Result of the connection function (a successful connection may still yield an insufficient stream;  side errors are passed as warnings)</param>
            <param name="_configurationData">optional configuration data; not used for ActiveMQ</param>
            <param name="_settings">optional settings; not used for ActiveMQ</param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.ros2.Ros2MessageType">
            <summary>
            Data struct for ROS marshalling in Prelogic
            TODO : Feature must be TRL Reviewed by CVT
            
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.ros2.Ros2MessageType.GetDDSType">
            <summary>
            Return the DDS Type as string
            </summary>
            <returns>the DDS Type as string</returns>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.opcua.OPCUAClient.concurrentWriteQueue">
            <summary>
            Concurrent Write Queue
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUAClient.CreateSession(System.String,System.String,System.Collections.Generic.List{u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract},System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Create an OPC UA session
            </summary>
            <param name="_endpointUrl">The endpoint </param>
            <param name="_configName"> The config name for this session</param>
            <param name="_passWord">password</param>
            <param name="_filePath">the file path for the .config.xml </param>
            <param name="_autoAccept">auto accepts</param>
            <param name="_signalContracts">list of signalcontracts</param>
            <param name="_xmlNameSpace">xmlNameSpace</param>
            <param name="_identifierType">id</param>
            <param name="_userName">username</param>
            <param name="_useCallback">run on off thread</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUAClient.subscribe(System.Int32,System.Collections.Generic.List{Opc.Ua.NodeId})">
            <summary>
            also takes care of real time values.
            </summary>
            <param name="_interval"></param>
            <param name="_referenceDescriptionCollection"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUAClient.sortSignalContracts(System.Collections.Generic.Dictionary{System.String,u040.prespective.prelogic.adapters.opcua.SignalContractReference})">
            <summary>
            sorts the signalcontracts to fidelity.
            </summary>
            <param name="_signalContractReferences"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUAClient.EnqueueWrite(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Write OPC UA values values + node ids must match
            </summary>
            <param name="_values">Array of values</param>
            <param name="_nodeIDs">Array of node ids</param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.opcua.OPCUAServerSettings">
             <summary>
             <description>
             Settings for OPC_UA Adapter
             </description>
            </summary>
             <author author= "Koen Grotenhuis"/>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUAServerSettings.GetConfigFilePath">
            <summary>
            Get file path used for .config.xml
            </summary>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUAServerSettings.GetConfigSectionName">
            <summary>
            Returns the Config Section Name
            </summary>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.opcua.OPCUAStreamAdapter">
            <summary>
            OPCUA Stream adapter implementation
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUAStreamAdapter.ClientKeepAlive(Opc.Ua.Client.Session,Opc.Ua.Client.KeepAliveEventArgs)">
            <summary>
            Keep client alive
            </summary>
            <param name="_sender"></param>
            <param name="_keepAliveEventArgs"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.opcua.OPCUABrowser.BrowseRecursive(Opc.Ua.Client.Session)">
            <summary>
            Returns a collection of nodes starting from the root.
            </summary>
            <param name="_session"></param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.activemq.ActiveMQServerSettings">
            <summary>
            @CLASS : ActiveMQ Server Settings 
            
            @ABOUT: Server Settings for ActiveMQ
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 10/30/2019 - Added MessageDeliveryMode 
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.activemq.ActiveMQServerSettings.IPAddress">
            <summary>
            IP Address to target for the ActiveMQ server (127.0.0.1)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.activemq.ActiveMQServerSettings.Port">
            <summary>
            The port to use for the ActiveMQ server (default: 61616)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.activemq.ActiveMQServerSettings.CorrelationID">
            <summary>
            Correlation ID used by ActiveMQ
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.activemq.ActiveMQServerSettings.DeliveryMode">
            <summary>
            Set the delivery mode (default persistent)
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.activemq.ActiveMQConfigInteractor">
            <summary>
            @CLASS : ActiveMQ Stream Adapter 
            
            @ABOUT: ActiveMQ implementation of Stream Signal Socket
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 10/30/2019 - cleaned up comments 
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQConfigInteractor.ExportConfiguration(System.Object)">
            <summary>
            Export the configuration settings
            </summary>
            <param name="_configuration"></param>
            <exception cref="!:NotImplementedException"></exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQConfigInteractor.ImportConfiguration(System.Object)">
            <summary>
            Import configuration settings
            </summary>
            <param name="_configuration"></param>
            <exception cref="!:NotImplementedException"></exception>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamSignalSocket">
            <summary>
            @CLASS : ActiveMQ Stream Adapter 
            
            @ABOUT: ActiveMQ implementation of Stream Signal Socket
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 10/30/2019 - cleaned up comments 
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamSignalSocket.onValueChanged(Apache.NMS.IMessage)">
            <summary>
            On Value changed callback for ActiveMQ Messages (Handled by dll)
            </summary>
            <param name="_receivedMessage">IMessage Object</param>
            <exception cref="T:System.Exception">On Mismatch</exception>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamSignalSocket.LiveValueBuffer">
            <summary>
            Live (current) Value SignalBuffer
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamSignalSocket.LiveValue">
            <summary>
            Current value
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamSignalSocket.writeValue(u040.prespective.preplug.logicadapter.signaladaptation.SignalBuffer)">
            <summary>
            Write values to the buffer and to the adapter
            </summary>
            <param name="_value">SignalBuffer object that holds newvalue and date time</param>
            <exception cref="T:System.Exception">Unable to write</exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamSignalSocket.Dispose">
            <summary>
            Dispose options the object
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.activemq.ActiveMQType">
            <summary>
            ActiveMQ supported types conform:
            http://activemq.apache.org/nms/msdoc/1.6.0/vs2005/Output/html/AllMembers_T_Apache_NMS_IPrimitiveMap.htm
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility">
            <summary>
            @CLASS : ActiveMQUtility 
            
            @ABOUT: Utility class for reading and writing to Active MQ queues
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 20/06/2019 - Added read write operations with TYPE as indicator for mapped messages
                                          
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.activeMQSignalOperations">
            <summary>
            List of ActiveMQ Signal operations per type
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.ReadActiveMQSignalValue(u040.prespective.prelogic.SupportedSignalType,Apache.NMS.IMessage)">
            <summary>
            Read AMQsignalValue
            </summary>
            <param name="_signalType">Preplug signal type</param>
            <param name="_msg">MapMessage Object</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.WriteActiveMQSignalValue(u040.prespective.prelogic.SupportedSignalType,Apache.NMS.IMessageProducer,Apache.NMS.IMessage,System.Object)">
            <summary>
            Write AMQ Signal value
            </summary>
            <param name="_signalType">Preplug signal type</param>
            <param name="_producer">ActiveMQ Producer</param>
            <param name="_msg">MapMessage Object</param>
            <param name="_value">Value to write</param>
            <returns></returns>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.activeMQTypeConversion">
            <summary>
            Type conversion for XML policy
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.getActiveMQType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Converts the prelogic type to ActiveMQ type
            </summary>
            <param name="_prelogicType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.getPrelogicType(u040.prespective.prelogic.adapters.activemq.ActiveMQType)">
            <summary>
            Converts the ActiveMQ signal type to prelogic type
            </summary>
            <param name="_activemqType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.importPrelogicSignalType(System.String)">
            <summary>
            Returns prelogic signaltype based on the string of amqtype
            </summary>
            <param name="_amqType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQUtility.exportActiveMQSignalType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Returns the strong of the activeMQ type
            </summary>
            <param name="_signalType"></param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter">
            <summary>
            @CLASS : ActiveMQStreamAdapter 
            
            @ABOUT: Stream Adapter Settings to connect to an Active MQ Server
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 20/06/2019 - Make a connection to an Active MQ server based on Cordis Template by Pieter
                                          Reads and writes to queues (hardtyped)
                                          Connection is hardtyped over activemq:tcp
                                          
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.Connect(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            2) Connect to the ActiveMQ broker
            </summary>
            <param name="_result">Result of the connection function (a successful connection may still yield an insufficient stream;  side errors are passed as warnings)</param>
            <param name="_configurationData">optional configuration data; not used for ActiveMQ</param>
            <param name="_settings">optional settings; not used for ActiveMQ</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.ConnException(System.Exception)">
            <summary>
            Callback when a connection exception is tossed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.ConnInterrupted">
            <summary>
            Callback if connection interrupted
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.ConnResumed">
            <summary>
            Callback when connection resumes
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.RegisterStreamSignals(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            Register Stream all available Signals
            </summary>
            <param name="_result"></param>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.registerActiveMQOutput(Apache.NMS.ActiveMQ.Connection,Apache.NMS.ActiveMQ.Session,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,System.String,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Registering a new Output Socket
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_correlationID">The used correlation ID</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.registerActiveMQInput(Apache.NMS.ActiveMQ.Connection,Apache.NMS.ActiveMQ.Session,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,System.String,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Registration of an input signal
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_correlationID">The used correlation ID</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.activemq.ActiveMQStreamAdapter.registerActiveMQVariable(Apache.NMS.ActiveMQ.Connection,Apache.NMS.ActiveMQ.Session,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,System.String,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Setup of a variable signal direction. Combination of input and output
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_correlationID">The used correlation ID</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
            <returns></returns>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.ros1.ROS1StreamAdapterSettings.RosBridgeServerUrl">
            <summary>
            The url used to connect with the ROS bridge.
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros1.ROS1StreamAdapterSettings.RosConnectionTimeoutInSeconds">
            <summary>
            Timeout in secconds for the connection with the ROS bridge.
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros1.ROS1StreamAdapterSettings.Protocol">
            <summary>
            Protocol used by the ROS bridge client.
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros1.ROS1StreamAdapterSettings.Serializer">
            <summary>
            Enum that sets the type of serializer used by the ROS bridge client.
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros1.ROS1StreamAdapterSettings.RosMessageFileDirectory">
            <summary>
            Directory that is used to find .msg files used for generating ROS1 message classes
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.ros1.ROS1StreamAdapterSettings.RosMessageClassOutputDirectory">
            /// <summary>
            Directory used as output location for generated ROS1 message class files.
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.CorrelationID">
            <summary>
            Correlation used by ActiveMQ
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.IPAddress">
            <summary>
            IP Address to target for the ActiveMQ server
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.Port">
            <summary>
            The port to use for the ActiveMQ server
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.ConnectionTimeoutDuration">
            <summary>
            Wait until the Connection Times out
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.OutOfSyncTimeoutDuration">
            <summary>
            Waits until the Connection loses sync
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.protocol">
            <summary>
            Protocol to use (not yet implemented)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.LifeCycleOutputName">
            <summary>
            Output used to manage lifecycle events
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.pingPongInName">
            <summary>
            Message Queue to use for PingPong to server
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.pingPongOutName">
            <summary>
            Message Queue to use for PingPong output
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.queueInName">
            <summary>
            Message Queue for input messages
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.festamq.FestaMQServerSettings.queueOutName">
            <summary>
            Message Queue used for output messages
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility" -->
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.FB_ID_CHAR_OPTIONS">
            <summary>
            Character options for the Function Block ID in a TwinCat TcPOU file
            (TC 4022.28: Currently not used since ID's corrupt the model import)
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.generate_FB_ID">
            <summary>
            Generates a FB ID for a TwinCat TcPOU file
            Example: {45910d14-f664-462b-9321-8e1f7f5693cb}
            (TC 4022.28: Currently not used since ID's corrupt the model import)
            </summary>
            <returns></returns>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.TcPOU_BASENODE">
            <summary>
            Structure of a TcPOU (Class) file Basenode
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.GVL_BASENODE">
            <summary>
            Structure of a TcGVL (Global Variable List) file basenode
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.linkedModelHeaderGenerator(u040.prespective.prelogic.configuration.SignalExportModelLink)">
            <summary>
            Appends a header to the stringified linked model
            </summary>
            <param name="_lModel">linked model to create a header for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.linkedModelHeaderGenerator(u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Appends a header to the stringified non-linked model
            </summary>
            <param name="_lModel">non-linked model to create a header for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.genModelFieldName(u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Generates the fieldname (i.e. used for instancing of this model) to use for a model
            </summary>
            <param name="_model">model to generate the fieldname for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.genModelClassName(u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Generates the classname (i.e. used for typing, and the file name) of the model
            </summary>
            <param name="_model">model to generate the classname for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.genLinkedModelClassName(u040.prespective.prelogic.configuration.SignalExportModelLink)">
            <summary>
            Generates the classname (i.e. used for typing, and the file name) of the linked model
            </summary>
            <param name="_model">linked model to generate the classname for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.genModelCollectionClassName(u040.prespective.prelogic.configuration.SignalExportModel,UnityEngine.Vector2Int)">
            <summary>
            Generates the Collection signifier for a particular model
            </summary>
            <param name="_model">the model(type) to create a collection for</param>
            <param name="_range">minimal and maximal index to register in the collection (i.e. twincat allows arrays to start at an index > 0)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.genModelFileStub(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},u040.prespective.prelogic.configuration.PreLogicConfigurationSettings)">
            <summary>
            Generates the stub (minimal structure) for a model
            </summary>
            <param name="_modelName">name of this model</param>
            <param name="_modelSettings">Settings affecting the stub generation of this model (export target dependant)</param>
            <param name="_configSettings">Configuration settings active on the simulator (user settings)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.genSignalDirectionInjectionStub(u040.prespective.prelogic.PLCSignalDirection,System.String,u040.prespective.prelogic.configuration.PreLogicConfigurationSettings)">
            <summary>
            Inserts the signal injection markers in the stub string (the markers that indicate where auto-generated file management is active, and where the user is in control)
            </summary>
            <param name="_signalDirection">the direction of the signal</param>
            <param name="_exportFileType">the filetype we are looking to export</param>
            <param name="_configSettings">the configuration settings that apply</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.cleanLinkedModelName(u040.prespective.prelogic.configuration.SignalExportModelLink,System.Char[])">
            <summary>
            Clean the class model name
            - Attempt to determine if this class represents a collection by looking for an array bracket
            - Alternatively, try to name the class to the greatest shared name part for all tied models; and trim the end of the name with commonly used splitter symbols
            </summary>
            <param name="_linkedModel"></param>
            <param name="_illegalEndCharacters"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.assignToSubSystem(u040.prespective.prelogic.signal.SignalInstance,System.Collections.Generic.List{u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem}@,System.Char)">
            <summary>
            Assign a signal to a specific subsystem
            </summary>
            <param name="_signal">the signal to assign</param>
            <param name="_currentSystems">the currently available subsystems</param>
            <param name="_splitter">the splitter character to use to split subsystems</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigurationExporterUtility.getSignalSubSystem(System.Collections.Generic.List{System.String},System.Collections.Generic.List{u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem},u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem,u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem)">
            <summary>
            Get the subsystem containing signal by path
            </summary>
            <param name="_path">the path leading to this PLC signal</param>
            <param name="_systemOptions">the alternative options for subsystems that may contain the PLC signal</param>
            <param name="_currentSystem">when recursing, the most recent system visited</param>
            <returns>the subsystem that should contain this particular signal</returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem">
            <summary>
            @CLASS : SignalSubSystem
            
            @ABOUT : pattern found in a configuration indicative of a model for a set of signals
                     A Signal Subsystem may be generalized as a model when exporting; the form
                     is dependant on the target application
                     
            @AUTHOR: Pieter (Unit040)
            
            @VERSION : v1.00 - 07/03/2019 - Part of the Configuration Exporter for Prelogic Alpha module
                     Seems to support most structures creatable using regular expressions
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem.getMaxNestingDepth(System.Int32)">
            <summary>
            Returns the maximum nesting level found in this model
            NOTE: the depth = getSystemsAtnestingLevel + 1
            </summary>
            <param name="_depth">the maximum depth found</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem.getSystemsAtNestingLevel(System.Int32)">
            <summary>
            Returns all model (systems) found at a particular nesting level
            </summary>
            <param name="_depth">the nesting level to look in</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.SignalSubSystem.ToString">
            <summary>
            Outputs this subsystem as string (Not used for exporting, but as a Debugging function)
            </summary>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamSignalSocket.onValueChanged(System.Object,u040.prespective.prelogic.adapters.PlcValueChanged)">
            <summary>
            Called by adapter when OUTPUT value changed.
            No INPUT support yet.
            </summary>
            <param name="_sender"></param>
            <param name="_args"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigInteractor">
            <summary>
            @CLASS : CordisConfigInteractor
            
            @ABOUT : Prelogic Configuration settings for Cordis Gateway
            
            @AUTHOR: Pieter (Unit040)
            
            @VERSION: V1.00 - 07/03/2019 - Export to ADS implemented for Prelogic Alpha
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigInteractor.ExportConfiguration(System.Object)">
            <summary>
            Actually export the Cordis Prelogic configuration
            </summary>
            <param name="_configuration">the simulator object</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSConfigInteractor.ImportConfiguration(System.Object)">
            <summary>
            Actually import the cordis Prelogic configuration
            
            v1.00 NOTE: not yet implemented
            </summary>
            <param name="_configuration">the simulator object</param>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSServerSettings.IPAddress">
            <summary>
            IP Address to target for the ActiveMQ server
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.tc2ads.TwincatTPYLoader">
            <summary>
            Helper class for TwinCat 2 to connect to ADS prelogic adapter
            Custom build for KMWE
            
            Unit040 - Bas Botermans
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.TwincatTPYLoader.ReadDocument(System.String)">
            <summary>
            Read Twincat 2 TPY file as XML document
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:u040.prespective.prelogic.adapters.tc2ads.TwincatTPYLoader.GetNameTwincatValuePair(System.Xml.XmlDocument)" -->
        <!-- Badly formed XML comment ignored for member "M:u040.prespective.prelogic.adapters.tc2ads.TwincatTPYLoader.GetVariableInfoFromXMLNode(System.Xml.XmlNode)" -->
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.adapters.tc2ads.TwincatADSType" -->
        <member name="T:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter">
            <summary>
            <description>
            Twincat ADS stream adapter uses block read and write
            </description>
            <version 
                ver="0.0.2" 
                author="Koen" 
                date="190927">
                
            </version>
                /// <version 
                ver="1.0.0" 
                author="Koen" 
                date="021027">
                <summary>
                   SHORT + LONG + USHORT + SBYTE + ULONG now works
                </summary>
            </version>
            
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.ADSClient">
            <summary>
            The ADSClient
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.tc2ADSServerSettings">
            <summary>
            Settings specific for the twincat ADS Stream connection
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.adsInputVariables">
            <summary>
            A list of all ads input variables
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.adsOutputVariables">
            <summary>
            A list of all ads output values
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.adsVariableReady">
            <summary>
            Double checks if the ads variable list has been initialized.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.setVariableLists">
            <summary>
            Initialize the INPUT and OUTPUT variable List
            Right now we block a lot of base Values
            TODO implement non implemented base values.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.BlockReadWriteUpdate">
            <summary>
            Use block/read write to update the INPUT and OUTPUT values.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.tc2ads.Twincat2ADSStreamAdapter.SetADSValue(u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,System.Object)">
            <summary>
            Sets an ADS INPUT value
            </summary>
            <param name="_contract"></param>
            <param name="_value"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.APreLogicAdapterFactory`3">
            <summary>
            Prelogic Adapter Factory for creating a new adapter
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.amqp.AmqpStreamAdapter">
            <summary>
            @CLASS : AMQPStreamAdapter 
            
            @ABOUT: Stream Adapter Settings to connect to a AMQP 1.0 Broker
                    Client based on AmqpNet 
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 12/01/2020 - Created the adapter for connection to azure IoT and AMQP artemis
                                          
                                          
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpStreamAdapter.Connect(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            2) Connect to the AMQP broker
            </summary>
            <param name="_result">Result of the connection function (a successful connection may still yield an insufficient stream;  side errors are passed as warnings)</param>
            <param name="_configurationData">optional configuration data; not used for AMQP</param>
            <param name="_settings">optional settings; not used for AMQP</param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpStreamAdapter.RegisterStreamSignals(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            Register Stream all available Signals
            </summary>
            <param name="_result"></param>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpStreamAdapter.RegisterAmqpOutput(Amqp.Connection,Amqp.Session,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Registering a new Output Socket
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpStreamAdapter.RegisterAmqpInput(Amqp.Connection,Amqp.Session,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Registration of an input signal
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpStreamAdapter.RegisterAmqpVariable(Amqp.Connection,Amqp.Session,u040.prespective.preplug.logicadapter.policyadaptation.signal.SignalContract,u040.prespective.prelogic.adapters.APreLogicStreamSignalSocket@,System.String@)">
            <summary>
            Setup of a variable signal direction. Combination of input and output
            </summary>
            <param name="_connection">Current Connection</param>
            <param name="_session">Current Session</param>
            <param name="_contract">Signal contract for this adapter</param>
            <param name="_streamSocket">The created stream signal socket</param>
            <param name="_svrMsg">Error Messages</param>
            <returns>whether the action was successful</returns>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.amqp.AMQPServerSettings">
            <summary>
            @CLASS : AMQP Server Settings 
            
            @ABOUT: Server Settings for AMQP
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 10/30/2019 - Added MessageDeliveryMode 
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.amqp.AMQPServerSettings.IPAddress">
            <summary>
            IP Address to target for the ActiveMQ server (127.0.0.1)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.amqp.AMQPServerSettings.Port">
            <summary>
            The port to use for the ActiveMQ server (default: 61616)
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.amqp.AmqpUtility">
            <summary>
            @CLASS : AMQPUtility 
            
            @ABOUT: Utility class for reading and writing to AMQP queues
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 20/06/2019 - Added read write operations with TYPE as indicator for mapped messages
                                          
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.amqp.AmqpUtility.amqpSignalOperations">
            <summary>
            List of ActiveMQ Signal operations per type
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpUtility.ReadAmqpSignalValue(u040.prespective.prelogic.SupportedSignalType,Amqp.Message)">
            <summary>
            Read AMQsignalValue
            </summary>
            <param name="_signalType">Preplug signal type</param>
            <param name="_msg">MapMessage Object</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpUtility.WriteAmqpSignalValue(u040.prespective.prelogic.SupportedSignalType,Amqp.SenderLink,System.Object)">
            <summary>
            Write AMQ Signal value
            </summary>
            <param name="_signalType">Preplug signal type</param>
            <param name="_sender">AMQP SenderLink</param>
            <param name="_value">Value to write</param>
            <returns></returns>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.amqp.AmqpUtility.amqpTypeConversion">
            <summary>
            Type conversion for XML policy
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpUtility.GETAmqpType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Converts the prelogic type to ActiveMQ type
            </summary>
            <param name="_prelogicType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpUtility.GETPrelogicType(u040.prespective.prelogic.adapters.amqp.AmqpType)">
            <summary>
            Converts the ActiveMQ signal type to prelogic type
            </summary>
            <param name="_amqpType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpUtility.ImportPrelogicSignalType(System.String)">
            <summary>
            Returns prelogic signaltype based on the string of amqtype
            </summary>
            <param name="_amqType"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AmqpUtility.ExportAmqpSignalType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Returns the strong of the AMQP type
            </summary>
            <param name="_signalType"></param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.amqp.AMQPConfigInteractor">
            <summary>
            @CLASS : AMQP Stream Adapter 
            
            @ABOUT: AMQP implementation of Stream Signal Socket
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 10/30/2019 - cleaned up comments 
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AMQPConfigInteractor.ExportConfiguration(System.Object)">
            <summary>
            Export the configuration settings
            </summary>
            <param name="_configuration"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AMQPConfigInteractor.ImportConfiguration(System.Object)">
            <summary>
            Import configuration settings
            </summary>
            <param name="_configuration"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.amqp.AMQPStreamSignalSocket">
            <summary>
            @CLASS : AMQP Stream Adapter 
            
            @ABOUT: AMQP implementation of Stream Signal Socket
            
            @AUTHOR: Bas Botermans (Unit040)
            
            @VERSION:v1.00 - 10/30/2019 - cleaned up comments 
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AMQPStreamSignalSocket.OnMessageReceived(Amqp.IReceiverLink,Amqp.Message)">
            <summary>
            On Value changed callback for ActiveMQ Messages (Handled by dll)
            </summary>
            <param name="_receivedMessage">IMessage Object</param>
            <exception cref="T:System.Exception">On Mismatch</exception>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.amqp.AMQPStreamSignalSocket.LiveValueBuffer">
            <summary>
            Live (current) Value SignalBuffer
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.amqp.AMQPStreamSignalSocket.LiveValue">
            <summary>
            Current value
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AMQPStreamSignalSocket.writeValue(u040.prespective.preplug.logicadapter.signaladaptation.SignalBuffer)">
            <summary>
            Write values to the buffer and to the adapter
            </summary>
            <param name="_value">SignalBuffer object that holds newvalue and date time</param>
            <exception cref="T:System.Exception">Unable to write</exception>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.amqp.AMQPStreamSignalSocket.Dispose">
            <summary>
            Dispose options the object
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.APreLogicStreamAdapter">
            <summary>
            Abstract Base Class for Prelogic Stream Adapter
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.BlockReadWriteUpdate">
            <summary>
            Used by ADS.
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.StreamAdapterSettings">
            <summary>
            Prelogic Stream adapter settings are highly adapter specific, and should thus be managed in the implementation
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.streamPolicyInteractorBuffer">
            <summary>
            The stream policy interactor is (currently) generic for all adapter types
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.contentLifeCycleManagerBuffer">
            <summary>
            The content lifecycle manager is (currently) generic for all adapter types
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.StreamState">
            <summary>
            the streamstate is generic for all prelogic connection types
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.onStreamAdapterEventBuffer">
            <summary>
            Preplug Client callback interface (since this is always just used by the (singular) parent client we needn't implement this as an event)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.ImportLocalPolicyDatabase(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.Connect(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)" -->
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.SyncLifeCycleManagement(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,u040.prespective.prelogic.adapters.PreLogicContentLifecycleManager,u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor,System.Collections.Generic.List{u040.prespective.prelogic.gateway.PreLogicSignalAdapter}@,System.Object@)">
             <summary>
             3) Setup the stream lifecycle management 
                forwarded to the stream adapter, since this is stream and application specific; may include custom signal adapters and sockets.
                
                This function is not expected to return a result until a valid lifecycle is estabilisedor this 
                function results in a timeout (and should thus be non-blocking/offthread)
             </summary>
             <param name="_result"></param>
             <param name="_lifeCycleManager"></param>
             <param name="_policyInteractor"></param>
             <param name="_lifeCycleSignalAdapters"></param>
            <param name="_syncState"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.ImportRemotePolicyDatabase(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)" -->
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.ImportPolicy(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            1 and/or 4) 'Actually' import the governing policy (Signal contracts and type policy) - this may either be called from the local policy database
                or this may be based on the policy information send in the first sync
                
                this is mostely Prelogic generic, and may thus be implemented here
            </summary>
            <param name="_result"></param>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.CreateSignalAdapters(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            5) Create the signal adapters based on the available signal contracts.
            
               this is mostely Prelogic generic, and may thus be implemented here
            </summary>
            <param name="_result"></param>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.RegisterAppSignal(System.Object,System.String@)">
            <summary>
            5) Forwarded from the client to register a single application signal socket
            
               this is mostly Prelogic generic, and may thus be implemented here
            </summary>
            <param name="_signal"></param>
            <param name="_onRegistrationFail"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.RegisterStreamSignals(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            6) Register all stream signal sockets with the Signal Adapters - Gateway Specific
            </summary>
            <param name="_result"></param>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.StartStreamApplication(u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,System.Object,System.Object)">
            <summary>
            7) Start the streaming application (e.g. simulation) - should start communication over other signals than the ones used for content lifecycle management
            </summary>
            <param name="_result"></param>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.PauseStreamApplication(System.Boolean)">
            <summary>
            8) Pause the streaming application (e.g. simulation) - should pause all signal communication, except for those used for content lifecycle management
            </summary>
            <param name="_runState"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.StopStreamApplication(System.Object,System.Object)">
            <summary>
            9) Stop the streaming application (e.g. simulation) - should stop all signal communication; and reset their values to the startup state, except for those used for content lifecycle management
            </summary>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.Dispose">
            <summary>
            Dispose this adapter
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.APreLogicStreamAdapter.ExportPolicy(System.Object,System.Object,u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate)">
            <summary>
            10) Export the policy database; note that the exported database may contain particular settings specific for the gateway
                (e.g. the Cordis Gateway requires the type to be signified differently - REAL32 = REAL)
            </summary>
            <param name="_configurationData"></param>
            <param name="_settings"></param>
            <param name="_result"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor">
            <summary>
             Interactor to load the Stream Policy data for PreLogic
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.XML_TYPE_POLICY_CONTAINER_NODE">
            <summary>
            Node containing all type policy contracts
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.XML_TYPE_POLICY_BASETYPES_NODE">
            <summary>
            Node containing all basetype contracts
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.XML_TYPE_POLICY_STRUCTS_NODE">
            <summary>
            Node containing all structs
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.EXPOSE_FILE_POLICY">
            <summary>
            Whether or not file policy changes/settings are supported by this gateway
            Note that if 'expose_file_policy == false' struct signals are not supported
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.XMLPathPrefix">
            <summary>
            Default target path for the XML (next to the application executable, or in the root asset folder)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.preLogicTypePolicy">
            <summary>
            The filepolicy responsible for bitserialization of types for prelogic
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.preLogicSignalPolicy">
            <summary>
            The policy responsible for managing the prelogic signal contracts
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.TypePolicy">
            <summary>
            Forwards the currently active type policy
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.SignalPolicy">
            <summary>
            Forwards the currently active signal policy
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.ImportStreamPolicy(u040.prespective.preplug.logicadapter.IStreamAdapterSettings,System.Object,u040.prespective.preplug.logicadapter.policyadaptation.StreamPolicyDelegate,u040.prespective.preplug.logicadapter.IStreamAdapterSettings@,System.Boolean)">
            <summary>
            Import the Prelogic policy from the designated XML file
            </summary>
            <param name="_streamAdapterSettings">IPreLogicStreamAdapterSettings specified for this connection</param>
            <param name="_initialState">initial state object, not used for Prelogic</param>
            <param name="_onPolicyLoaded">Callback to be made when the policy is loaded</param>
            <param name="_newSettings"></param>
            <param name="_verbose">whether or not operations should be verbose (narrated) in the log</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.LoadFilePolicyFromXmldb(System.Xml.XmlDocument,u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings,System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}}@,System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.String}}@,System.Boolean)" -->
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.importSignalContract(System.Xml.XmlNode,u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings)">
            <summary>
            Convert the signalContract database transfer format to dictionary
            </summary>
            <param name="_contractNode">Node to convert</param>
            <param name="_adapterSettings"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.importServerSettings(System.Xml.XmlNode,u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings)">
            <summary>
            Modify the Adapter Settings with found settings in the XML file
            </summary>
            <param name="_activeControllerContainer">XML node called 'Active Controller'</param>
            <param name="_adapterSettings">Adapter Target Settings from simulator</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.importTypeContract(System.Xml.XmlNode,u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings)">
            <summary>
            Convert the typeContract database transfer format to dictionary
            </summary>
            <param name="_contractNode">Node to convert</param>
            <param name="_adapterSettings"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.retrieveXML(u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings,System.Exception@,System.Collections.Generic.List{System.String}@,System.Xml.XmlDocument@,System.Boolean)">
            <summary>
            Retrieves the XML specified within the settings
            </summary>
            <param name="_settings"></param>
            <param name="_xmlValidationError"></param>
            <param name="_issues"></param>
            <param name="_doc"></param>
            <param name="_verbose"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.simToXML(u040.prespective.prelogic.APreLogicSimulator,System.Xml.XmlDocument,System.Xml.XmlNode,u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings)">
            <summary>
            Export an entire Simulation to XML
            </summary>
            <param name="_sim">the simulator to export</param>
            <param name="_doc">the XML Document to append to</param>
            <param name="_signalParent">the signal XML node</param>
            <param name="_streamAdapterSettings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.componentToXML(u040.prespective.prelogic.component.PreLogicComponent,System.Xml.XmlDocument,System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings)">
            <summary>
            Export a single SoftSimComponent Instance to XML
            </summary>
            <param name="_comp">the component instance to export</param>
            <param name="_doc">the XML Document to append to</param>
            <param name="_inputsParent">the inputs XML Node</param>
            <param name="_outputsParent">the outputs XML Node</param>
            <param name="_varParent">the variables XML Node</param>
            <param name="_streamAdapterSettings"></param>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicStreamPolicyInteractor.ioToXML(u040.prespective.prelogic.signal.SignalInstance,System.Xml.XmlDocument,System.Xml.XmlNode,u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings)">
            <summary>
            Export a single IOInstance to an xml node
            </summary>
            <param name="_io">the IOInstance to export</param>
            <param name="_doc">the XML Document to append to</param>
            <param name="_ioNode">the node to contain the IOInstance data</param>
            <param name="_streamAdapterSettings"></param>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.SerializeForSettings">
            <summary>
            Attribute to auto-serialize Prelogic Adapter Settings 
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.SerializeForConnection">
            <summary>
            Attribute to turn Fields into Adapter Connection XML properties 
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.PreLogicSignalAdapterInteractor">
            <summary>
            Prelogic SignalAdapter Interactor
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.IPreLogicStreamAdapterSettings">
            <summary>
            Prelogic Stream Adapter Settings Interface
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.PreLogicAdapterTarget">
            <summary>
            Supported Gateway adapter options
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.PreLogicAdapterUtility">
            <summary>
            Utility functions specific for adapting to different Prelogic Gateways
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.adapterConfigurations">
            <summary>
            Configuration settings buffer
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.AdapterConfigurations">
            <summary>
            Configuration settings for dealing with different gateway targets
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.FactorPrelogicStreamSetting(u040.prespective.prelogic.adapters.PreLogicAdapterTarget,u040.prespective.preplug.logicadapter.IStreamAdapterSettings)">
            <summary>
            Factor a particular type of Stream Adapter befitting a gateway target
            </summary>
            <param name="_target">the gateway to target</param>
            <param name="_settings">the settings previously set</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.FactorPreLogicConfigurationInteractor(u040.prespective.prelogic.adapters.PreLogicAdapterTarget,u040.prespective.preplug.logicadapter.IStreamAdapterSettings,u040.prespective.prelogic.configuration.PreLogicConfigurationSettings)">
            <summary>
            Factor the particular configuration interactor befitting the gateway target
            </summary>
            <param name="_target">the gateway to target</param>
            <param name="_adapterSettings">the settings previously set</param>
            <param name="_configSettings">the current configuration settings</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.GetAdapterTargetBySettingsType(u040.prespective.preplug.logicadapter.IStreamAdapterSettings)">
            <summary>
            Determine the Adapter target based on the settings object currently active
            (Required to determine the selected gateway after Unity Scene Serialization)
            </summary>
            <param name="_settings">the settings currently active</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.FactorPrelogicStreamAdapter(u040.prespective.prelogic.adapters.PreLogicAdapterTarget,u040.prespective.preplug.logicadapter.policyadaptation.IStreamPolicyInteractor,u040.prespective.preplug.logicadapter.OnStreamAdapterStateEvent,u040.prespective.preplug.logicadapter.AContentLifeCycleManager,u040.prespective.preplug.logicadapter.IStreamAdapterSettings,u040.prespective.prelogic.APreLogicSimulator)">
            <summary>
            Factor the Stream Adapter befitting the gateway target
            </summary>
            <param name="_target">the gateway to target</param>
            <param name="_policyInteractor">the policy interactor currently active</param>
            <param name="_eventHandler">the event handler function to forward</param>
            <param name="_lifeCycleManager">the lifecycle manager currently active</param>
            <param name="_settings">the settings currently active</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.OpenPolicyFile(u040.prespective.preplug.logicadapter.IStreamAdapterSettings,System.Exception@)">
            <summary>
            Opens the (Local) Policy file (if it exists)
            </summary>
            <param name="_policy">the current policy settings</param>
            <param name="_failReason">output exception on file operation failure</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.ImportPrelogicSignalType(System.String)">
            <summary>
            Import a Prelogic Signal Type by string (cast it to an enum if possible)
            If this operation fails, we are likely dealing with a custom typed struct (which needs auxiliary functions to deserialize)
            </summary>
            <param name="_prelogicType">the string with the serialized type</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.adapters.PreLogicAdapterUtility.ExportPrelogicSignalType(u040.prespective.prelogic.SupportedSignalType)">
            <summary>
            Export a Prelogic Signal type (generally to local policy)
            </summary>
            <param name="_signal">the signal to export</param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.PreLogicAdapterConfiguration">
             <summary>
            Struct for managing factoring functions for a single gateway adapter
             </summary>
        </member>
        <member name="T:u040.prespective.prelogic.adapters.PreLogicContentLifecycleManager">
            <summary>
            Prelogic Content Lifecycle Manager for lifecycle operations
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.configuration.SignalExportModelLink">
            <summary>
            Class to link signal export models accross components within a single simulation configuration
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModelLink.SimilarExportModelName">
            <summary>
            Name to use for this group of signal export models with a similar signature
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModelLink.SimilarSignalExportModels">
            <summary>
            Actual signal export models with a similar signature (nesting depth, contained signal signatures)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModelLink.IsCollection">
            <summary>
            Whether this export model link represents a collection (should be determined at specfic exporter level)
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.configuration.PreLogicConfigurationSettings">
            <summary>
            Configuration settings for importing/exporting a Prelogic simulation configuration
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicConfigurationSettings.projectExportFolder">
            <summary>
            Folder containing the project we want to export our signals to
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicConfigurationSettings.fileTypeExportRules">
            <summary>
            Supported export Filetypes, and rules that apply to injection in files of this type
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.configuration.SignalExportModel" -->
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModel.SignalExportModelName">
            <summary>
            Name of this signal export model
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModel.ContainedSignalExportModels">
            <summary>
            Nested signal export models
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModel.ContainedSignals">
            <summary>
            Signals contained in this model
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModel.SignalExportModelLink">
            <summary>
            signature link this model shares with other models(nesting depth, contained signal signatures)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.SignalExportModel.IsCollection">
            <summary>
            Whether this export model link represents a collection (should be determined at specfic exporter level)
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.SignalExportModel.Equals(u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Compares whether this models' signature matches the signature of another model
            </summary>
            <param name="_other"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.SignalExportModel.GetMaxNestingDepth(System.Int32)">
            <summary>
            Returns the maximum export model nesting depth found in this model
            </summary>
            <param name="_depth">recursive variable of starting depth (should be 0)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.SignalExportModel.GetModelsAtNestingLevel(System.Int32)">
            <summary>
            Returns the models found at a particular nesting level
            </summary>
            <param name="_depth">the depth to retrieve the models at (note that the deepest SignalExportModel is found at getMaxNestingDepth() - 1)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.SignalExportModel.ToString">
            <summary>
            Outputs this subsystem as string
            </summary>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern">
            <summary>
            Pattern describing the relation between text that needs to be selected from a Signal Output text and the marking indicating where it should be inserted in an active PLC project
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.selectionReg">
            <summary>
            Regex containing the selector (isolation of part of the container file to be replaced)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.injectionReg">
            <summary>
            Regex containing the injector (isolation of part of the injected string to actually be injected)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.signalDirection">
            <summary>
            Direction of signal instance this pattern is relevant for
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.selectionStart">
            <summary>
            Start string to look for within the injection string, marking the start of the part to be injected (expects full word, both start and end are required)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.selectionEnd">
            <summary>
            End string to look for within the injection string, marking the end of the part to be injected (expects full word, both start and end are required)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.includeSelectors">
            <summary>
            Whether or not the selectors in the injected string are to be included in injection; default is false
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.injectionStart">
            <summary>
            Start string to look for within the container string, marking the start for injection replacement
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.injectionEnd">
            <summary>
            End string to look for within the container string, marking the end for injection replacement
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.verbose">
            <summary>
            Whether or not verbose reporting should be done when executing this pattern
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.#ctor(u040.prespective.prelogic.PLCSignalDirection,System.String,System.String,System.String,System.String)">
            <summary>
            Default constructor, forces all using classes to define the minimal parameters
            </summary>
            <param name="_signalDirection"></param>
            <param name="_selStart"></param>
            <param name="_selEnd"></param>
            <param name="_injStart"></param>
            <param name="_injEnd"></param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicTextInjectorPattern.GetInjectionReplace(System.String,System.String,System.String@)">
            <summary>
            Replace the content found within the first found [Selection] 
            within [_containerText] with the first found [injection] within [_injectedText]
            </summary>
            <param name="_containerText">the original container text with selection markers as set in [selection_start] and [selection_end]</param>
            <param name="_injectedText">the injected text with injection markers as set in [injection_start] and [injection_end]</param>
            <param name="_resultText">the resulting text after injecting into container text</param>
            <returns>whether both selectors we're found, and the injection was succesfully made</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.configuration.PreLogicConfigurationUtility" -->
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationUtility.ExportModelToFile(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Text.StringBuilder,System.Func{System.String,System.Collections.Generic.Dictionary{System.String,System.Object},u040.prespective.prelogic.configuration.PreLogicConfigurationSettings,System.String},u040.prespective.prelogic.configuration.PreLogicConfigurationSettings,System.String,System.Boolean)">
            <summary>
            Export a single model (extracted and stringified from the simulation configuration)
            to a file
            </summary>
            <param name="_model">the name of the model to export (used for aliassing)</param>
            <param name="_modelSettings">the settings that apply on this model (model type, file extension, etc.)</param>
            <param name="_sb">the stringbuilder containing the stringified model</param>
            <param name="_generateNewFileStub">function to call to create a model stub (if no model was found at the expected location)</param>
            <param name="_settings">the configuration settings as set by the user</param>
            <param name="_newLine">the newline character to use in this file (default = unix)</param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationUtility.PreviewSignalExportModels(u040.prespective.prelogic.APreLogicSimulator,System.String)">
            <summary>
            Test function for previewing the signal model structure (generally used for debugging)
            </summary>
            <param name="_sim">the simulation to target</param>
            <param name="_signalSplitter">the splitter string to use for splitting a signal name (generally a dot)</param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationUtility.GetSimulationSignalExportModels(u040.prespective.prelogic.APreLogicSimulator,System.String,System.Collections.Generic.List{u040.prespective.prelogic.configuration.SignalExportModelLink}@)">
            <summary>
            Algorithm for splitting and assigning all simulation signals by PLC name, and sorting these for easy export (for instance, for Twincat)
            </summary>
            <param name="_sim">the simulation to export</param>
            <param name="_signalSplitter">the splitter string to use for splitting a signal name (generally a dot)</param>
            <param name="_linkedModels">the found linked model (by model signal signature)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationUtility.LinkSimilarSignalExportModels(System.Collections.Generic.List{u040.prespective.prelogic.configuration.SignalExportModel},System.Collections.Generic.List{u040.prespective.prelogic.configuration.SignalExportModelLink}@)">
            <summary>
            Link similar signal export models based on their signal signature (so they may have a shared compiled model on the other side of the gateway)
            </summary>
            <param name="_baseLevelModels">the export models found at the highest level (contain all other models)</param>
            <param name="_linkedModels">the resulting found linked models (who will share a class model)</param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationUtility.AssignToExportModel(u040.prespective.prelogic.signal.SignalInstance,System.Collections.Generic.List{u040.prespective.prelogic.configuration.SignalExportModel}@,System.String)">
            <summary>
            Assign a signal to a specific subsystem
            </summary>
            <param name="_signal">the signal to assign</param>
            <param name="_currentSystems">the currently available subsystems</param>
            <param name="_splitter">the splitter string to use to split subsystems</param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationUtility.GetSignalExportModel(System.Collections.Generic.List{System.String},System.Collections.Generic.List{u040.prespective.prelogic.configuration.SignalExportModel},u040.prespective.prelogic.configuration.SignalExportModel)">
            <summary>
            Get the subsystem containing signal by path
            </summary>
            <param name="_path">the path leading to this PLC signal</param>
            <param name="_systemOptions">the alternative options for subsystems that may contain the PLC signal</param>
            <param name="_currentExportModel"></param>
            <returns>the subsystem that should contain this particular signal</returns>
        </member>
        <member name="T:u040.prespective.prelogic.configuration.PreLogicModelAlias">
            <summary>
            Alias to use for a particular model name (not yet fully implemented)
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicModelAlias.modelName">
            <summary>
            Name of the resulting model affected by this rule; a rule marked with {{ALL}} will be used as a default
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicModelAlias.resultModelAlias">
            <summary>
            Name alias to use for the model (and filename) within the PLC Project
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicModelAlias.#ctor(System.String,System.String)">
            <summary>
            Constructor forcing all params to be set
            </summary>
            <param name="_modelName"></param>
            <param name="_resultModelAlias"></param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicModelAlias.CreateAlias(System.String)">
            <summary>
            Create the model alias
            </summary>
            <param name="_modelName"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicModelAlias.RuleApplies(System.String)">
            <summary>
            Whether this rule applies to this particular model
            </summary>
            <param name="_modelName">the name of the model to test</param>
            <returns>-1 if false, otherwise returns the priority of this rule for the model</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule" -->
        <member name="F:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule.fileTypeName">
            <summary>
            The name to use for this particular type of file
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule.fileTypeSuffix">
            <summary>
            suffix to use for this particular type of files
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule.fileTypeTargetFolder">
            <summary>
            Target folder for files of this type
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule.fileTargetRules">
            <summary>
            Registry with model (class) aliases used in the PLC project
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule.injectorPatterns">
            <summary>
            Injector patterns used for exports of this filetype
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule.GetInjectorPatternsBySignalDirection(u040.prespective.prelogic.PLCSignalDirection)">
            <summary>
            Returns all injector patterns valid for a particular signal direction (input, output or variable)
            </summary>
            <param name="_signalDirection">the signal direction to look for</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicFileTypeExportRule.GetMostRelevantAlias(System.String,u040.prespective.prelogic.configuration.PreLogicModelAlias@)">
            <summary>
            Get the alias rule most relevant for this particular model
            </summary>
            <param name="_modelName">the model name to evaluate</param>
            <param name="_result">the resulting alias</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.configuration.PreLogicConfigurationInteractor" -->
        <!-- Badly formed XML comment ignored for member "F:u040.prespective.prelogic.configuration.PreLogicConfigurationInteractor.configurationSettings" -->
        <member name="P:u040.prespective.prelogic.configuration.PreLogicConfigurationInteractor.ConfigurationSettings">
            <summary>
            Interface for setting and getting the sim configuration settings
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationInteractor.ExportConfiguration(System.Object)">
            <summary>
            Initialize exporting a configuration (to an external logic environment)
            </summary>
            <param name="_configuration"></param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationInteractor.ImportConfiguration(System.Object)">
            <summary>
            Initialize importing a configuration (from an external environment)
            </summary>
            <param name="_configuration"></param>
        </member>
        <member name="M:u040.prespective.prelogic.configuration.PreLogicConfigurationInteractor.CustomUIBlock(u040.prespective.prelogic.APreLogicSimulator)">
            <summary>
            Custom adapter interactions UI blocks
            </summary>
            <param name="_simulator"></param>
        </member>
        <member name="P:u040.prespective.prelogic.configuration.PreLogicConfigurationInteractor.HasCustomUIBlock">
            <summary>
            Whether the adapter uses a custom UI block
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:u040.prespective.prelogic.configuration.IPreLogicStreamClient.ConfigurationInteractor" -->
        <member name="T:u040.prespective.prelogic.PLCSignalDirection">
            <summary>
            The direction of the signal (FROM THE PLC! so output is input for simulation, visa versa)
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.SupportedSignalType">
            <summary>
            Local implementation of the Preplug Signal Types
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.PreLogicUtility">
            <summary>
            Prelogic Utility Class
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.PreLogicTypeConversion">
            <summary>
            structtype for managing the adaptation from a preplug to prelogic signal type
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.IO.SignalNamingRule">
            <summary>
            Signal Naming Rules for usage with prelogic simulator
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.SIGNALTYPE_ALL">
            <summary>
            Default key for targeting all IO Paths
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.ruleTarget">
            <summary>
            The rule target this pathing rule applies to (by default formatted as 'IODefinition.defaultSimIOName')
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.simAddressPathFormat">
            <summary>
            Formatting for the simulation address path - variables wrapped in double curly brackets are replaced on component instantiation
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.plcAddressPathFormat">
            <summary>
            Formatting for the plc address path - variables wrapped in double curly brackets are replaced on component instantiation
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.simPathSeparator">
            <summary>
            Seperator character used in the simulation path (when replacing SIM_ROOTPATH or COMP_SIMPATH, if applicable)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.plcPathSeparator">
            <summary>
            Separator character used in the PLC path (when replacing SIM_ROOTPATH or COMP_SIMPATH, if applicable) 
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.simPathBaseBuffer">
            <summary>
            Local buffer for the path this component holds within the simulator (obviously only applicable when this struct is instantiated as part of a component)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.IO.SignalNamingRule.plcPathBaseBuffer">
            <summary>
            Local buffer for the path this component holds within the PLC datastructure
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.IO.SignalNamingRule.GenerateSimPath(u040.prespective.prelogic.component.PreLogicComponent,System.String)">
            <summary>
            Generate the path of this component to its owning simulator (different function because of different separator)
            </summary>
            <param name="_c">the requesting component</param>
            <param name="_IO_name">the name of this IO (last part of the path)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.IO.SignalNamingRule.GeneratePlcPath(u040.prespective.prelogic.component.PreLogicComponent,System.String)">
            <summary>
            Generate the PLC address path (different function because of different separator)
            </summary>
            <param name="_c">the requesting component</param>
            <param name="_IO_name">the name of this IO (last part of the path)</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.IO.SignalNamingRule.generatePath(u040.prespective.prelogic.component.PreLogicComponent,System.String,System.Char)">
            <summary>
            Generates the path from component based on a string with replacable variables
            
            Note : Due to the local nature of this functions used variables, don't set public
            </summary>
            <param name="_preLogicComponent">the requesting component</param>
            <param name="_baseString">the path with variables to be replaced</param>
            <param name="_splitCharacter">the seperator character to use within the path</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.IO.SignalNamingRule.generatePathFast(u040.prespective.prelogic.component.PreLogicComponent,System.String,System.Char)">
            <summary>
            Generates the path from component based on a string with replaceable variables
            
            Note : Due to the local nature of this functions used variables, don't set public
            </summary>
            <param name="_logicComponent">the requesting component</param>
            <param name="_base">the path with variables to be replaced</param>
            <param name="_sep">the separator character to use within the path</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.IO.SignalNamingRule.GetFittingPathingRule(System.Collections.Generic.List{u040.prespective.prelogic.IO.SignalNamingRule},u040.prespective.prelogic.signal.SignalDefinition)">
            <summary>
            Find the fitting pathing rule for a particular IO Definition
            if a IO specific rule is found, it will trump a generic rule (i.e. $ALL) 
            </summary>
            <param name="_rules">the list of rules to evaluate</param>
            <param name="_definition">the IO definition to evaluate</param>
            <returns>the index of the rule best fitting the IODefinition, returns -1 if no rule is found</returns>
        </member>
        <member name="T:u040.prespective.prelogic.APreLogicSimulator">
            <summary>
            Prelogic Simulator, container for connections with an external datasource
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.threadLock">
            <summary>
            Since (De-)Serialization may be ran on a off-thread we need to lock the setting/getting of our serialized data
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.preLogicStreamClient">
            <summary>
            The prelogic streamclient responsible for managing the stream;
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.settingsData">
            <summary>
            ISerializationCallBackReceiver implementation required to get/set the values
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.simulatorName">
            <summary>
            Name of this simulator
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.contentLifeCycleSettings">
            <summary>
            The lifecycle settings befitting this stream
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.configurationSettings">
            <summary>
            The configuration settings befitting this stream
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.startSimulatorInPlaymode">
            <summary>
            Whether or not to start the simulator directly on entering playmode
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.preLogicLoggingSettings">
            <summary>
            Logging settings data container
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.componentInstanceRuleOverride">
            <summary>
            Buffered InstanceRules
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.signalNamingRulesOverrideList">
            <summary>
            Buffered naming rules
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.components">
            <summary>
            List of indexed components
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.APreLogicSimulator.exportSettings">
            <summary>
            Policy export settings (exposed on UX)
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.APreLogicSimulator.PrelogicStreamClient">
            <summary>
            Prelogic Stream Client responsible for the connection
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.APreLogicSimulator.StreamClientState">
            <summary>
            Public stream client state
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnPLClientError(u040.prespective.prelogic.adapters.PrelogicStreamClient,u040.prespective.preplug.logicadapter.StreamClientState,System.Collections.Generic.List{System.Exception})">
            <summary>
            Fired when an error occurs
            </summary>
            <param name="_client"></param>
            <param name="_state"></param>
            <param name="_error"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnClientIssues(u040.prespective.prelogic.adapters.PrelogicStreamClient,u040.prespective.preplug.logicadapter.StreamClientState,System.Collections.Generic.List{System.String},System.Exception@)">
            <summary>
            Fired when there are non blocking errors
            </summary>
            <param name="_client"></param>
            <param name="_state"></param>
            <param name="_issues"></param>
            <param name="_exception"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnClientPolicyReady(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when the policy is ready
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnClientStreamReady(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when the stream is ready
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnClientLifeCycleReady(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when the Lifecycle is ready
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.onClientSignalAdaptersReady(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when the Signal Adapters are ready
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.onClientRemoteSignalsReady(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when Remote signals are ready
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.onClientApplicationReady(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when Application is ready
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnClientApplicationStarted(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when Stream Client is started
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnClientApplicationPaused(u040.prespective.prelogic.adapters.PrelogicStreamClient)">
            <summary>
            Called when Stream Client is paused
            </summary>
            <param name="_streamClient"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnClientApplicationUpdate(u040.prespective.prelogic.adapters.PrelogicStreamClient,System.Int32,System.Single,System.Single,System.DateTime)">
            <summary>
            Called when Stream Client is updated
            </summary>
            <param name="_streamClient"></param>
            <param name="_simFrame"></param>
            <param name="_timeDelta"></param>
            <param name="_simDuration"></param>
            <param name="_simStart"></param>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.Start">
            <summary>
            Unity-Start
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.FixedUpdate">
            <summary>
            Unity - FixedUpdate
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.Reset">
            <summary>
            Unity - Reset
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnApplicationQuit">
            <summary>
            Unity - OnApplicationQuit
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.RequestComponentsToRegister">
            <summary>
            1) When preparing the gateway application for running, first request all contained components to register
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.RegisterSignalInstance(u040.prespective.prelogic.signal.SignalInstance,System.String@)">
            <summary>
            Register an IO with the simulator; ran by components on receiving the registration event
            </summary>
            <param name="_signal"></param>
            <param name="_registrationError"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.IndexComponents(System.Boolean)">
            <summary> 
            Indexes all components within this simulator
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnBeforeSerialize">
            <summary>
            Unity Callback - OnBeforeSerialize
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.APreLogicSimulator.OnAfterDeserialize">
            <summary>
            Unity Callback - OnAfterDeserialize 
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.APreLogicSimulator.GetConcreteExplicitType">
            <summary>
            Retrieve the preferred Concrete Explicit Inheritant Class of [REPLACE WITH CLASS NAME]  
            (which is located in a different assembly, so we need to index it in runtime)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.gateway.PreLogicSignalAdapter" -->
        <member name="T:u040.prespective.prelogic.signal.SignalDefinition">
            <summary>
            Defines the blueprint for a single IO name, direction and type as the blueprint for a IOInstance
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.Priority">
            <summary>
            Priority of this signal in comparison to other signals received in a single frame (update)
            High priority signals are managed before low priority signals; if priority is equal the sequence is arbitrary
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.StructType">
            <summary>
            In case of dealing with a struct; the structtype
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.DefaultSignalName">
            <summary>
            The default Signal Name within the simulation - within a simulation only this value should be used
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.PlcSignalDirection">
            <summary>
            The Direction of this signal; either input or output (interpreted from PLC side)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.PlcSignalType">
            <summary>
            The Type of this signal - SupportedSignalTypes are defined in the Cordis Gateway, but are directly convertable to System.type's
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.OnValueChange">
            <summary>
            Listener function, used only for outputs, called on changing of the value
            WARNING : component instance binding of private functions (at instantiation of the IODefinition by a component instance) 
                      will only work as long as the IODefinition remains a struct
                      alter this structs structure with care!
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.BaseValue">
            <summary>
            Optional basevalue for this IO after instantiation
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.XmlNote">
            <summary>
            Note to add to the XML at IO instances
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.QoSOverride">
            <summary>
            Override for the default QoS setting (on the PLC) for this IO specifically
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalDefinition.PathingRuleOverride">
            <summary>
            Override for the pathing rule
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.signal.SignalDefinition.DefaultTypeContract">
            <summary>
            Returns the Default Type Contract for this Signal Definition
            not that the Application specific Type Contract may differ due to custom byte spacing and or serialization rules
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.signal.SignalDefinition.SystemType">
            <summary>
            Returns the SystemType for this Contract
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.signal.SignalDefinition.#ctor(System.String,u040.prespective.prelogic.PLCSignalDirection,u040.prespective.prelogic.SupportedSignalType,System.String,System.String,u040.prespective.prelogic.signal.OnSignalValueChanged,System.Action{System.Object},System.Object,System.UInt32,System.Int32,System.String,System.Boolean,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Default constructor, uses a similar name for Simulator and PLC IO (Highly Preferable!)
            </summary>
            <param name="_ioName">name of the IO</param>
            <param name="_plcSignalDirection">direction of the IO (from the PLC!)</param>
            <param name="_plcSignalType">type of the IO</param>
            <param name="_structType"></param>
            <param name="_xmlNote">Note to add to the XML</param>
            <param name="_onValueChange">Function called on IO value change</param>
            <param name="_doValueChange"></param>
            <param name="_baseValue">default value for IO</param>
            <param name="_qosOverride"></param>
            <param name="_pathingRuleOverride"></param>
            <param name="_fidelity"></param>
            <param name="_customParams"></param>
            <param name="_priority"></param>
        </member>
        <member name="M:u040.prespective.prelogic.signal.SignalDefinition.#ctor(System.String,System.String,u040.prespective.prelogic.PLCSignalDirection,u040.prespective.prelogic.SupportedSignalType,System.String,System.String,u040.prespective.prelogic.signal.OnSignalValueChanged,System.Action{System.Object},System.Object,System.UInt32,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Legacy support constructor; uses a different name for the Simulator- and PLC IO (Only use when absolutely necessary!)
            </summary>
            <param name="_simIOName">name of the IO in the simulation</param>
            <param name="_plcIOName">name of the IO in the PLC</param>
            <param name="_plcSignalDirection">direction of the IO (from the PLC!)</param>
            <param name="_plcSignalType">type of the IO</param>
            <param name="_structType"></param>
            <param name="_xmlNote">Note to add to the XML</param>
            <param name="_valueChange">Function called on IO value change</param>
            <param name="_doValueChange"></param>
            <param name="_baseValue">default value for IO</param>
            <param name="_priority"></param>
            <param name="_qosOverride"></param>
            <param name="_fidelity"></param>
            <param name="_CustomParams"></param>
        </member>
        <member name="T:u040.prespective.prelogic.signal.PreLogicAppSignalSocket">
            <summary>
            Prelogic App Signal Socket
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.PreLogicAppSignalSocket.signalInstances">
            <summary>
            List of registered signal instances with this socket (multiple live signals may receive updates from this socket)
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.signal.PreLogicAppSignalSocket.#ctor(System.Object,u040.prespective.preplug.logicadapter.signaladaptation.adapterStateDelegate,System.Func{System.Object,System.String},System.Func{System.String,System.Object})">
            <summary>
            Default constructor, expects the default value
            </summary>
            <param name="_defaultValue"></param>
        </member>
        <member name="F:u040.prespective.prelogic.signal.PreLogicAppSignalSocket.onSetValue">
            <summary>
            Entrypoint to set the signal delegate when registered at Signal Adapter
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.PreLogicAppSignalSocket.onGetValue">
            <summary>
            Entrypoint to get the signal delegate when registered at Signal Adapter
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.PreLogicAppSignalSocket._appSignalBuffer">
            <summary>
            locally buffered value currently in this socket
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.signal.PreLogicAppSignalSocket.onSignalValueChanged(u040.prespective.preplug.logicadapter.signaladaptation.SignalBuffer,u040.prespective.preplug.logicadapter.signaladaptation.SignalBuffer)">
            <summary>
            Function called when a signal value changed
            </summary>
            <param name="_oldValue"></param>
            <param name="_newValue"></param>
        </member>
        <member name="P:u040.prespective.prelogic.signal.PreLogicSignalBuffer.ContainsValue">
            <summary>
            Returns whether this signal buffer contains a value
            (Since both the DateTime Object and the value can be non-nullable types, we check it via the value of the Datetime)
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.signal.PreLogicSignalBuffer.ToString">
            <summary>
            Override of the ToString function for verbose logging
            </summary>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.signal.PrelogicSignalState">
            <summary>
            Options for this socket state
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.signal.SignalInstance">
            <summary>
            Signal instance used for communication with external datasource
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.Definition">
            <summary>
            Definition of this signal instance
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.Owner">
            <summary>
            owner component of this signal instance
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.SimName">
            <summary>
            The full address of this IO Instance within the simulation
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.PlcAddress">
            <summary>
            The full address of this IO Instance within the PLC
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.Description">
            <summary>
            Optional note to add to the XML for this signal instance
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.Fidelity">
            <summary>
            Algorithm fidelity setting loaded from policy
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.MostRecentRemoteBuffer">
            <summary>
            The Most recent forwarded signal buffer from/to the remote
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.MostRecentLocalValue">
            <summary>
            The Most recent buffered local value (most likely set from the UI)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.TargetedCallbacks">
            <summary>
            All Callbacks registered here
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.CallbackBufferList">
            <summary>
            List of actions that is filled upon a valuechange event that can come from a different thread
            This list is updated each simulator update frame and handled in PrelogicComponent
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.signal.SignalInstance.InvokeTargetedCallbacks(u040.prespective.prelogic.signal.PreLogicSignalBuffer,u040.prespective.prelogic.signal.PreLogicSignalBuffer)">
            <summary>
            Invokes the value change event on all callback requesters linked to this signal instance (runtime only)
            </summary>
            <param name="_newBuffer">the new value buffer</param>
            <param name="_oldBuffer">the previous value buffer</param>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.SetValue">
            <summary>
            delegate used to set the value of this signal
            (At startup this signal value is set to the default unlinked implementation)
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.SignalInstance.GetValue">
            <summary>
            Delegate used to get the value of this signal
            (At startup this signal value is set to the default unlinked implementation)
            </summary>
        </member>
        <member name="T:u040.prespective.prelogic.signal.ImplicitNamingRule">
            <summary>
            Implicit Naming Rules used in prelogic component
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.ImplicitNamingRule.INDEX_IN_PARENT">
            <summary>
            Reference to the index of this component typed instance within the parent simulator
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.ImplicitNamingRule.SecondPassSelectorRegex">
            <summary>
            Selector for the second compilation pass
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.signal.ImplicitNamingRule.InstanceNameRule">
            <summary>
            Rule to apply
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.signal.ImplicitNamingRule.instantiateName(u040.prespective.prelogic.component.PreLogicComponent)">
            <summary>
            Instantiate the instance name rule with instace parameters
            </summary>
            <param name="_component"></param>
        </member>
        <member name="M:u040.prespective.prelogic.signal.ImplicitNamingRule.SolveDynamicExpresso(u040.prespective.prelogic.component.PreLogicComponent,u040.prespective.prelogic.signal.SignalDefinition,System.String)">
            <summary>
            Run the dynamic expresso function
            </summary>
            <param name="_component"></param>
            <param name="_definition"></param>
            <param name="_name"></param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.PreLogicLoggingSettings">
            <summary>
            Prelogic Logging Settings Class
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.PreLogicLoggingSettings.LogValuesToFile">
            <summary>
            Whether or not to log values to a file
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.PreLogicLoggingSettings.Reference">
            <summary>
            refere to address or sim name, address is the preferred default setting
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.PreLogicLoggingSettings.LogFileName">
            <summary>
            Log File Name
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.PreLogicLoggingSettings.RelativeLogFilePath">
            <summary>
            Relative log path
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.PreLogicLoggingSettings.logFileExtension">
            <summary>
            log file extension
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.PreLogicLoggingSettings.completeLogFilename">
            <summary>
            Filename for writing
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.PreLogicLoggingSettings.GetLoggingPreview">
            <summary>
            Preview of the filename + path
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.PreLogicLoggingSettings.InitLogConfiguration(System.String@)">
            <summary>
            Initialize the logger
            </summary>
            <param name="_status">return message about the the state</param>
            <returns>true/false if initialization is successful</returns>
        </member>
        <member name="T:u040.prespective.prelogic.policy.PrelogicPolicyExportSettings">
            <summary>
            Prelogic Policy Export Settings
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.csv.IsolationUtility" -->
        <member name="F:u040.prespective.prelogic.csv.IsolationUtility.isRunning">
            <summary>
            Whether the sequence is running
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.csv.IsolationUtility.isComplete">
            <summary>
            Whether the sequence is complete
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.csv.IsolationUtility.keepAlive">
            <summary>
            Whether to keep the thread alive
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.csv.IsolationUtility.ConvertCsvToIsolationInstances(System.Collections.Generic.List{u040.prespective.prelogic.adapters.isolation.IsolationLine},u040.prespective.prelogic.APreLogicSimulator)">
            <summary>
            Return the correct signals from the prelogic simulator to use with the isolation adapter
            </summary>
            <param name="_definitionSplitName"></param>
            <param name="_sim">current prelogic simulator</param>
            <returns></returns>
        </member>
        <member name="T:u040.prespective.prelogic.FMUPrelogicComponent">
            <summary>
            Prelogic FMU component
            <para>Copyright (c) 2015-2023 Prespective, Unit040 Beheer B.V. All Rights Reserved. See License.txt in the project Prespective folder for license information.</para>
            </summary>
        </member>
        <member name="E:u040.prespective.prelogic.FMUPrelogicComponent.OnOutputValueChanged">
            <summary>
            Event Handler is called whenever an output has changed
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.FMUPrelogicComponent.onChange(System.Collections.Generic.Dictionary{System.String,System.Single})">
            <summary>
            sets the changes on change event.
            </summary>
            <param name="_outputConnections"> output values changed with their corresponding names></param>
        </member>
        <member name="M:u040.prespective.prelogic.FMUPrelogicComponent.WriteSignalValue(System.String,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="_signalName">Signal Name</param>
            <param name="_newValue">New Value</param>
            <param name="_forceDirectWrite">Write Immediately and bypass all checks</param>
        </member>
        <member name="P:u040.prespective.prelogic.FMUPrelogicComponent.SignalDefinitions">
            <summary>
            Returns all signal instances
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.FMUPrelogicComponent.createSignalDefinitions">
            <summary>
            creates the outpunt and input list of the prelogic component for the fmu
            </summary>
            <returns>output input list</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:u040.prespective.prelogic.component.PreLogicComponent" -->
        <member name="F:u040.prespective.prelogic.component.PreLogicComponent.simulatorBuffer">
            <summary>
            Reference to the parent simulator
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.component.PreLogicComponent.bufferedGUIValues">
            <summary>
            Runtime Dictionary to contain all current serialized values for all signal inputs and variables
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.component.PreLogicComponent.SignalDefinitions">
            <summary>
            Returns the IO definitions for this specific type of component
            Preferably this getter is overridden in the childclass to generate the correct I/Os directly
            </summary>
        </member>
        <member name="P:u040.prespective.prelogic.component.PreLogicComponent.SignalInstances">
            <summary>
            Generator for the IOInstances if they do not already exist
            </summary>
        </member>
        <member name="F:u040.prespective.prelogic.component.PreLogicComponent.signalInstanceDictionary">
            <summary>
            A dictionary for quicker name finding.
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.GetSignalInstanceByName(System.String,System.Boolean)">
            <summary>
            Retrieves a signal instance by signal name
            </summary>
            <param name="_name">the name to use</param>
            <param name="_allowPartialName">whether to look for just the namepart, or whether it must match the full name</param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.ReadValue``1(System.String,``0@,System.Boolean,u040.prespective.prelogic.signal.PrelogicSignalState)">
            <summary>
            Get the value from the PLC
            </summary>
            Move this function to the parent class?
            <param name="_signalName"></param>
            <param name="_value"></param>
            <param name="_forceUpdateFromRemote"></param>
            <param name="_reportOnState"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.WriteValue``1(System.String,``0,System.DateTime,System.Boolean,u040.prespective.prelogic.signal.PrelogicSignalState)">
            <summary>
            set the value of a PLC input
            </summary>
            Move this function to the parent class?
            <param name="_signalName"></param>
            <param name="_newValue"></param>
            <param name="_dateTime"></param>
            <param name="_forceDirectWrite"></param>
            <param name="_reportOnState"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.WriteValue``1(System.String,``0,System.Boolean,u040.prespective.prelogic.signal.PrelogicSignalState)">
            <summary>
            set the value of a PLC input
            </summary>
            Move this function to the parent class?
            <param name="_signalName"></param>
            <param name="_newValue"></param>
            <param name="_forceDirectWrite"></param>
            <param name="_reportOnState"></param>
            <returns></returns>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.OnRegisterComponent(u040.prespective.prelogic.APreLogicSimulator)">
            <summary>
            Called when this component is registered by the parent simulator
            Only public callback function since its not triggered by callback
            </summary>
            <param name="_parentSim">reference to the parent simulator</param>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.RegisterSignalsWithSimulation">
            <summary>
            Registers an IO Instance with the IOAdapter it belongs to; also enabling the callback on value change
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.OnSimulationStarted">
            <summary>
            Called when the simulator is started - this is triggered when the simulator server is started
            
            This function is registered as listener in the 'onRegisterComponent' function
            </summary>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.OnSimulatorPaused(System.Single)">
            <summary>
            Called when the simulator is pauzed - this is triggered when the simulator server is pauzed (not yet implemented)
            
            This function is registered as listener in the 'onRegisterComponent' function
            </summary>
            <param name="_totalSimTime"></param>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.OnSimulatorUpdated(System.Int32,System.Single,System.Single,System.DateTime)">
            <summary>
            Called when the simulator is updated - this is triggered by the simulator with a specific delta time passed
            
            This function is registered as listener in the 'onRegisterComponent' function
            </summary>
            <param name="_simFrame"></param>
            <param name="_deltaTime"></param>
            <param name="_totalSimRunTime"></param>
            <param name="_simStart"></param>
        </member>
        <member name="M:u040.prespective.prelogic.component.PreLogicComponent.OnSimulatorStopped(System.Single)">
            <summary>
            Called when the simulator is stopped and resets
            
            This function is registered as listener in the 'onRegisterComponent' function
            </summary>
            <param name="_totalSimTime"></param>
        </member>
    </members>
</doc>
